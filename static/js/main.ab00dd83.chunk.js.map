{"version":3,"sources":["assets/gaugan.mp4","assets/landscape.jpg","components/Environment/Terrain.js","components/Managers/CameraControl.js","components/Managers/LightingManager.js","components/Managers/RendererManager.js","components/Managers/PatternManager.js","components/Managers/OctreeManager.js","components/Utilities/Utility.js","components/Environment/Agent.js","components/Environment/Pigeon.js","components/Environment/Target.js","components/Managers/PigeonManager.js","components/Utilities/Websocket.js","components/Utilities/ServerGui.js","components/Interface/GuiPanel.js","components/Utilities/CommonStyles.js","components/Interface/EnterPanel.js","components/Interface/Title.js","components/Interface/InfoPanel.js","components/Interface/SectionPanel.js","components/Interface/ContentPanel.js","components/Interface/World.js","components/App.js","index.js","models/world.glb","models/New_Bird.glb"],"names":["module","exports","GLTFLoader","OrbitControls","oc","THREE","OrbitParams","EnableControls","EnablePan","AutoRotate","RotateSpeed","EnableKeys","CameraControl","this","camera","window","innerWidth","innerHeight","position","set","lookAt","frustumCulled","controls","updateControls","update","enablePan","autoRotate","autoRotateSpeed","enabled","enableKeys","LightingManager","scene","directionalLight","intensity","normalize","add","RendererManager","renderer","antialias","setClearColor","setSize","setPixelRatio","devicePixelRatio","outputEncoding","console","log","domElement","render","PatternParams","PatternType","PatternTypes","EllipseParams","Origin","x","y","z","Radii","Amplitude","Speed","Direction","RoseCurveParams","Radius","Phase","NumPetals","Sinusoidal","Pattern","patternObj","theta_rad","amp","isClockwise","dir","originPos","pos","moveFactor","move","targetPos","maxTheta","r","Math","cos","sin","EllipsePattern","radX","radx","radZ","radz","PI","updateGuiParams","xPos","cartesianX","zPos","cartesianZ","yPos","cartesianY","updateTheta","degToRad","RosePattern","rad","phase","ph","numPetals","numP","isSin","PatternManager","curPatternType","amplitude","ellipseConstructor","curPattern","radius","isSinusoidal","roseConstructor","getTargetPos","Octree","origin","boundary","min","Vector3","max","tree","PointOctree","agent","insert","findPoints","pointCount","OctreeManager","flockOctree","flockTarget","liarbirds","setupOctree","forEach","l","insertPoint","nAgents","scanForPoints","n","a","push","getRandomNum","random","axisRotation","axis_x","axis_y","axis_z","angle_radians","q","norm","sqrt","AgentParams","SmoothFactor","AttractionForce","SeperationForce","CohesionForce","AlignmentForce","Gravity","Agent","velocity","acceleration","rotationA","rotationB","fSteer","vDesired","sumVec","diffVec","maxSpeed","Utility","target","isAlive","seek","neighbor","subVectors","seperate","cohere","align","addVectors","lerp","clampLength","multiplyScalar","copy","divideScalar","lengthSq","loader","Pigeon","loadPigeon","load","model","gltf","pigeon","name","parent","castShadow","receiveShadow","agentPosition","agentRotation","rotation","agentScale","scale","agentAnimations","animations","animationMixer","action","clipAction","randSeed","play","undefined","error","delta","updateBehaviour","applyForce","updatePosition","syncPosition","syncRotation","azimuth","inclination","v","atan2","acos","length","multiply","setRotationFromQuaternion","Target","geometry","material","color","wireframe","mesh","visible","TargetParams","ShowTarget","PigeonManager","octreeManager","patternManager","pigeons","clock","currentPatternType","spawnPigeons","setTargetPattern","patternPos","setVector","setVisibility","getDelta","p","setTarget","getNeighbours","recoverFromShock","newPatternType","i","choseOne","MathUtils","randInt","clamp","siteURL","herokuURL","socket","io","reconnection","reconnectionDelay","reconnectionAttempts","Infinity","once","subscribe","bind","handlePresetsCbk","on","logTime","handlePresets","data","presetName","json","payload","emit","readPresetsCallback","GuiParams","Preset","Presets","ServerGui","containerComponent","gui","Pane","title","container","expanded","registerPlugin","EssentialsPlugin","addInput","presetOptions","buildPresets","fpsGraph","addBlade","view","label","lineCount","f0","addFolder","patternFolder","buildPatternTypeOptions","buildPatterns","ellipseParamsFolder","roseCurveParamsFolder","step","f2","addButton","onSavePreset","onDeletePreset","onShowPanel","onSpawnAgents","onShootPigeon","Websocket","readAllPresets","onReceivePresets","event","guiJson","JSON","parse","value","importPreset","d","config","text","stringify","defaultPresetJSON","disposePresets","disposePatterns","showPatternParams","exportPreset","preset","_","find","sortBy","unshift","saveGuiPreset","alert","remove","deletePreset","presetJson","presetList","dispose","index","options","onPresetSelected","patternTypeOptions","Ellipse","RoseCurve","patternList","onPatternSelected","ev","patternChangeUpdate","hidden","callback","onShowPanelCallback","onSpawnAgentCallback","onShootPigeonCallback","styles","top","left","GuiPanel","props","state","guiRef","React","createRef","ref","style","current","subscribeShowPanel","subscribeSpawnAgents","subscribeShootPigeon","onShowInfoPanel","subscribeForPatternChange","Component","Radium","fontSize","padding","fontFamily","width","height","backgroundColor","display","flexDirection","alignItems","justifyContent","zIndex","hide","visibility","letterSpacing","opacity","loading","button","borderStyle","borderWidth","paddingLeft","paddingRight","cursor","EnterPanel","isHidden","isLoading","containerStyle","content","getLoader","getTitle","Fragment","onClick","onEnter","setState","onEnterWorld","setTimeout","hasFinishedLoading","onLoadComplete","animation","floatIn","keyframes","floatOut","alignSelf","animateIn","animationName","animateOut","about","ANIMATION_STATE","Title","aniState","handleAboutClick","onClickAbout","slideIn","slideOut","InfoPanel","colorA","colorB","SectionPanel","containerStyles","panelNum","panelRef","scrollIntoView","behavior","block","ContentPanel","overflow","video","World","worldRef","titleRef","videoRef","cameraControl","lightingManager","pigeonManager","rendererManager","rendererDomElement","getDomElement","appendChild","getFpsGraph","onPatternChanged","initializeRender","addSkybox","id","playsInline","loop","src","clouds","begin","getCamera","end","requestAnimationFrame","texture","side","map","cube","sphere","getCurPatternType","setup","updateTitle","updatePanel","setNewPatternType","shootPigeon","onScroll","panelStyles","panelVisible","App","showPanel","contentPanelRef","onScrollDown","scroll","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ab00dd83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gaugan.7656d0aa.mp4\";","module.exports = __webpack_public_path__ + \"static/media/landscape.c8a4b0e7.jpg\";","/*\n  Author: Amay Kataria\n  Date: 09/16/2021\n  Title: Terrain.js\n  Description: A class responsible to load the static terrain. This the natural landscape that \n  we bring in from Blender. \n*/\n\nimport * as THREE from 'three'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport terrain from '../../models/world.glb'; \n\n\nconst loader = new GLTFLoader(); \n\nexport default class Terrain {\n    constructor(scene) {\n        this.loadTerrain(scene); \n    }\n\n    loadTerrain(scene) {\n        loader.load(terrain, gltf => {\n            this.terrain = gltf.scene; \n            \n            // Agent is the parent object under which pigeon sits. \n            this.parent = new THREE.Group();\n            this.parent.add(this.terrain); \n            this.parent.frustumCulled = false;\n            this.parent.castShadow = true;\n            this.parent.receiveShadow = true; \n\n            // Store all the parameters that we'll be changing for this agent. \n            this.terrainPosition = this.parent.position; \n            this.terrainRotation = this.parent.rotation; \n            this.terrainScale = this.parent.scale\n\n            this.terrainScale.set(100, 100, 100);\n\n            // Add it to the scene. \n            scene.add(this.parent); \n        }, undefined, function ( error ) {\n            console.error(error);\n        }); \n    }\n\n    getMesh() {\n        return this.parent;\n    }\n}\n\n\n","/*\r\n  Name: CameraControl.js\r\n  Author: Amay Kataria\r\n  Date: 09/24/2021\r\n  Description: A module that handles camera and user interaction component.\r\n*/\r\n\r\nimport * as THREE from 'three'\r\nimport oc from 'three-orbit-controls'\r\n\r\nconst OrbitControls = oc(THREE); \r\n\r\nexport let OrbitParams = {\r\n    EnableControls: false,\r\n    EnablePan: true,\r\n    AutoRotate: false,\r\n    RotateSpeed: 0.1, \r\n    EnableKeys: true\r\n};\r\n\r\nclass CameraControl {\r\n    constructor() {\r\n        // Camera Setup\r\n        // (FOV, AspectRatio, Near Clipping, Far Clipping)\r\n        this.camera = new THREE.PerspectiveCamera(60, window.innerWidth/window.innerHeight, 0.05, 20000);\r\n        this.camera.position.set(0, 0, 65); \r\n        this.camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n        this.camera.frustumCulled = true; \r\n\r\n        this.controls = new OrbitControls(this.camera); \r\n    }\r\n\r\n    update() {\r\n        this.updateControls();\r\n    }\r\n\r\n    updateControls() {\r\n        this.controls.update();\r\n        this.controls.enablePan = OrbitParams.EnablePan;\r\n        this.controls.autoRotate = OrbitParams.AutoRotate; \r\n        this.controls.autoRotateSpeed = OrbitParams.RotateSpeed;\r\n        this.controls.enabled = OrbitParams.EnableControls; \r\n        this.controls.enableKeys = OrbitParams.EnableKeys;\r\n    }\r\n\r\n    getCamera() {\r\n        return this.camera;\r\n    }\r\n} \r\n\r\n// Keep a singleton instance of this - through App.js\r\nexport default CameraControl;","/*\r\n  Name: LightingManager.js\r\n  Author: Amay Kataria\r\n  Date: 09/26/2021\r\n  Description: Lighting module to control all the lights in the world. \r\n*/\r\n\r\nimport * as THREE from 'three'\r\n\r\nclass LightingManager {\r\n    constructor(scene) {\r\n        // -------- Lighting ----------------\r\n        // var ambientLight = new THREE.AmbientLight(0xD7D3D3);\r\n        // ambientLight.intensity = 0.5;\r\n        //this.scene.add(ambientLight);\r\n        \r\n        var directionalLight = new THREE.DirectionalLight(0xffffff);\r\n        directionalLight.intensity = 1.0;\r\n        directionalLight.position.set(0, 100, 0).normalize();\r\n        scene.add(directionalLight);\t\r\n    }\r\n} \r\n\r\nexport default LightingManager;","/*\r\n  Name: RendererManager.js\r\n  Author: Amay Kataria\r\n  Date: 09/26/2021\r\n  Description: Core renderer manager. \r\n*/\r\n\r\nimport * as THREE from 'three'\r\n\r\nclass RendererManager {\r\n    constructor() {\r\n        // Core renderer. \r\n        this.renderer = new THREE.WebGLRenderer({\r\n            antialias: true\r\n        }); \r\n        this.renderer.setClearColor('white', 1);    // Set renderer properties\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        this.renderer.outputEncoding = THREE.sRGBEncoding; \r\n\r\n        console.log(window.innerWidth);\r\n        console.log(window.innerHeight);\r\n\r\n        // this.renderer.setScissor(0, 0, window.innerWidth, window.innerHeight); \r\n        // this.renderer.setScissorTest(true);\r\n    }\r\n\r\n    getDomElement() {\r\n        return this.renderer.domElement; \r\n    }\r\n\r\n    render(scene, camera) {\r\n        this.renderer.render(scene, camera);\r\n    }\r\n} \r\n\r\n// Keep a singleton instance of this - through App.js\r\nexport default RendererManager;\r\n","/*\n  Name: PatternManager.js\n  Author: Amay Kataria\n  Date: 09/21/2021\n  Description: A class that holds two different patterns for birds. These are configured using \n  two param objects that are exposed in the GUI. \n*/\n\nimport * as THREE from 'three'\n\n// Pattern exports for the GUI\nexport let PatternParams = {\n    PatternType: '' // Build the list in ServerGui. Ellipse / Rose-Curve\n}; \nexport let PatternTypes = {\n    Ellipse: 0,\n    RoseCurve: 1\n}\n\n// Ellipse Params\nexport let EllipseParams = {\n    Origin: {x: 0, y: 6, z: 0},\n    Radii: {x: 10, y: 10},\n    Amplitude: 0,\n    Speed: 0.3, \n    Direction: true\n}  \n\n// Rose-Curve Params\nexport let RoseCurveParams = {\n    Origin: {x: 0, y: 6, z: 0},\n    Radius: 5,\n    Phase: 0.5, \n    NumPetals: 3, \n    Amplitude: 0,\n    Sinusoidal: true,\n    Direction: true,\n    Speed: 0.3\n}\n\nclass Pattern {\n    constructor(patternObj) {\n        this.theta_rad = 0; \n        this.amp = patternObj.amp;  \n        this.isClockwise = patternObj.dir; \n        this.originPos = patternObj.pos; \n        this.moveFactor = patternObj.move; \n        this.targetPos = new THREE.Vector3(0, 0, 0); // Agents follow this target. \n    }\n\n    updateTheta(maxTheta) {\n        // Update theta based on direction. \n        this.theta_rad = this.isClockwise ? \n            this.theta_rad + this.moveFactor : \n            this.theta_rad - this.moveFactor; \n\n        // Reset theta. \n        this.theta_rad = this.theta_rad >= maxTheta ? 0 : this.theta_rad;\n    }\n\n    cartesianX(r) {\n        return this.originPos.x + r * Math.cos(this.theta_rad);\n    }\n\n    cartesianZ(r) {\n        return this.originPos.z + r * Math.sin(this.theta_rad);\n    }\n    \n    cartesianY(r) {\n        return this.originPos.y + this.amp * Math.sin(this.theta_rad);\n    }\n\n    getTargetPos() {\n        return this.targetPos; \n    }\n}\n\nexport const ellipseConstructor = (originPos, radX, radZ, amplitude, isClockwise, moveFactor) => {\n    return {\n        pos: originPos, // C\n        radx: radX,\n        radz: radZ,\n        amp: amplitude, // C\n        dir: isClockwise, // C\n        move: moveFactor // C\n    }; \n}\n\nexport class EllipsePattern extends Pattern {\n    constructor(patternObj) {\n        super(patternObj); \n        this.radX = patternObj.radx; \n        this.radZ = patternObj.radz; \n        this.maxTheta = 2*Math.PI; \n    }\n\n    update() {\n        this.updateGuiParams(); \n        // Ellipse: Cartesian coordinates. \n        let xPos = this.cartesianX(this.radX); // Defines polar curve. \n        let zPos = this.cartesianZ(this.radZ); // Define polar curve. \n        let yPos = this.cartesianY(); // Defines height. \n        this.targetPos.set(xPos, yPos, zPos); \n\n        this.updateTheta(this.maxTheta); \n    }\n\n    updateGuiParams() {\n        this.originPos.set(EllipseParams.Origin.x, EllipseParams.Origin.y, EllipseParams.Origin.z);\n        this.radX = EllipseParams.Radii.x;\n        this.radZ = EllipseParams.Radii.y;\n        this.amp = EllipseParams.Amplitude; \n        this.moveFactor = THREE.Math.degToRad(EllipseParams.Speed); \n        this.isClockwise = EllipseParams.Direction; \n    }   \n}\n\nexport const roseConstructor = (originPos, radius, phase, numPetals, amplitude, isSinusoidal, isClockwise, moveFactor) => {\n    return {\n        pos: originPos, // C\n        rad: radius,\n        ph: phase, \n        numP: numPetals,\n        amp: amplitude, // C\n        isSin: isSinusoidal,\n        dir: isClockwise, // C\n        move: moveFactor // C\n    }\n}\n\n// r = asin(b + cTheta); \n// r = acos(b + cTheta); \n// a = radius\n// b = phase\n// c = numPetals\nexport class RosePattern extends Pattern {\n    constructor(patternObj) {\n        super(patternObj); \n        this.rad = patternObj.rad; \n        this.phase = patternObj.ph; \n        this.numPetals = patternObj.numP;\n        this.isSin = patternObj.isSin; \n        this.maxTheta = Math.PI; \n    }\n\n    update() {\n        this.updateGuiParams(); \n\n        let xPos, yPos, zPos; \n        let r = this.isSin ? this.rad * Math.sin(this.phase + this.numPetals * this.theta_rad) : \n            this.rad * Math.cos(this.phase + this.numPetals * this.theta_rad)\n\n        xPos = this.cartesianX(r); // Defines polar curve. \n        zPos = this.cartesianZ(r); // Defines polar curve. \n        yPos = this.cartesianY(); // Defines height. \n\n        this.targetPos.set(xPos, yPos, zPos); \n\n        this.updateTheta(this.maxTheta);\n    }\n\n    updateGuiParams() {\n        this.originPos.set(RoseCurveParams.Origin.x, RoseCurveParams.Origin.y, RoseCurveParams.Origin.z); \n        this.rad = RoseCurveParams.Radius; \n        this.phase = RoseCurveParams.Phase;\n        this.amp = RoseCurveParams.Amplitude; \n        this.numPetals = RoseCurveParams.NumPetals;\n        this.isSin = RoseCurveParams.Sinusoidal; \n        this.isClockwise = RoseCurveParams.Direction; \n        this.moveFactor = THREE.Math.degToRad(RoseCurveParams.Speed); \n    }\n}\n\nexport class PatternManager {\n    constructor() {\n        // Just a simple instance to begin with. \n    }\n\n    setTargetPattern(curPatternType) {\n        if (curPatternType === PatternTypes.Ellipse) {\n            console.log('Creating Ellipse Pattern');\n            let pos = new THREE.Vector3(0, 6, 0); // Target position\n            let radX = 10; \n            let radZ = 10;\n            let amp = 0; \n            let dir = true; \n            let moveFactor = THREE.Math.degToRad(0.3); \n            let patternObj = ellipseConstructor(pos, radX, radZ, amp, dir, moveFactor); \n            this.curPattern = new EllipsePattern(patternObj); \n        } else if (curPatternType === PatternTypes.RoseCurve) {\n            // Initialize Rose-Curve pattern. \n            console.log('Creating Rose-Curve Pattern');\n            let pos = new THREE.Vector3(0, 6, 0); \n            let rad = 10; \n            let phase = 0.5; \n            let numPetals = 3; \n            let amp = 0;\n            let isSin = true; \n            let dir = true; \n            let moveFactor = THREE.Math.degToRad(0.3); \n            let patternObj = roseConstructor(pos, rad, phase, numPetals, amp, isSin, dir, moveFactor);\n            this.curPattern = new RosePattern(patternObj);\n        }\n    }\n\n    update() {\n        if (this.curPattern) {\n            this.curPattern.update(); \n            return this.curPattern.getTargetPos();\n        }        \n    }\n}","\r\n/*\r\n  Author: Amay Kataria\r\n  Date: 09/13/2021\r\n  Title: OctreeManager.js\r\n  Description: Octree is a tree data structure where each parent can have uptill 8 children.\r\n  We use this data structure to improve the performance of the flock. Now, every agent doesn't \r\n  have to test against every other agent. This data structure helps keep a list of neighbors for each\r\n  agent. \r\n*/\r\n\r\nimport { Vector3 } from 'math-ds';\r\nimport { PointOctree } from 'sparse-octree'; \r\n\r\nconst BIAS = 0.0; // No loose octree. \r\nconst MAX_POINTS = 2.0; // Maximum points before the tree splits. \r\nexport class Octree {\r\n    constructor(origin, boundary) {\r\n        let min = new Vector3(0, 0, 0);\r\n        let max = new Vector3(0, 0, 0);\r\n\r\n        min.x = origin.x - boundary; \r\n        min.y = origin.y - boundary; \r\n        min.z = origin.z - boundary; \r\n\r\n        max.x = origin.x + boundary; \r\n        max.y = origin.y + boundary; \r\n        max.z = origin.z + boundary;\r\n\r\n        this.tree = new PointOctree(min, max, BIAS, MAX_POINTS); \r\n    }\r\n\r\n    // Insert a point into the octree along with the data that should be retried. \r\n    insertPoint(position, agent) {\r\n        this.tree.insert(position, agent); \r\n    }\r\n\r\n    // Finds all the points in the octree within a given radius. \r\n    scanForPoints(position, radius) {\r\n        return this.tree.findPoints(position, radius, true); \r\n    }\r\n\r\n    pointCount() {\r\n        return this.tree.pointCount; \r\n    } \r\n}\r\n\r\nconst OCTREE_HOOD_BOUNDARY = 20; \r\nconst NEIGHBOUR_RADIUS = 5; // Radius from the origin.\r\nexport class OctreeManager {\r\n    constructor() {\r\n        this.flockOctree = {};\r\n    }\r\n\r\n    update(flockTarget, liarbirds) {\r\n        this.setupOctree(flockTarget, liarbirds); \r\n    }\r\n\r\n    setupOctree(flockTarget, liarbirds) {\r\n        this.flockOctree = new Octree(flockTarget, OCTREE_HOOD_BOUNDARY); \r\n        liarbirds.forEach(l => {\r\n            this.flockOctree.insertPoint(l.position, l); \r\n        }); \r\n    }\r\n\r\n    // Neighbours around a point. \r\n    getNeighbours(origin) {\r\n        let neighbours; let nAgents=[]; \r\n        neighbours = this.flockOctree.scanForPoints(origin, NEIGHBOUR_RADIUS);\r\n        neighbours.forEach(n => {\r\n            let a = n['data']; \r\n            nAgents.push(a); \r\n        }); \r\n        return nAgents; \r\n    }\r\n}\r\n\r\n          ","const getRandomNum = (max = 0, min = 0) => {\n    return Math.random() * (max - min) + min;\n}\n\nconst map_range = (value, low1, high1, low2, high2) => {\n    return low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n}\n\nconst azimuth = (v) => {\n    return Math.atan2(v.x, v.z);\n}\n\nconst inclination = (v) => {\n    return Math.acos(v.y / v.length());\n}\n\nconst axisRotation = (axis_x, axis_y, axis_z, angle_radians, q) => {\n    var norm = Math.sqrt(axis_x * axis_x + axis_y * axis_y + axis_z * axis_z);\n    axis_x /= norm;\n    axis_y /= norm;\n    axis_z /= norm;\n    var cos = Math.cos(angle_radians / 2);\n    var sin = Math.sin(angle_radians / 2);\n    q.set(axis_x * sin, axis_y * sin, axis_z * sin, cos); \n}\n\nexport {\n    getRandomNum,\n    map_range,\n    azimuth,\n    inclination,\n    axisRotation\n}","import * as THREE from 'three'\nimport * as Utility from '../Utilities/Utility'\n\nexport let AgentParams = {\n    SmoothFactor: 0.01,\n    AttractionForce : 1.5,\n    SeperationForce: 1.2,\n    CohesionForce: 1.1,\n    AlignmentForce: 1.4,\n    Gravity: new THREE.Vector3(0, -0.3, 0)\n}\n\nexport default class Agent {\n    constructor() {\n        // this.idx = i; \n        // // Construct all important variables. \n        this.position = new THREE.Vector3(Math.random() * 20, Math.random() * 20, Math.random() * 20); \n        this.velocity = new THREE.Vector3(0.0, 0.0, 0.0); \n        this.acceleration = new THREE.Vector3(0, 0, 0); \n        this.rotationA = new THREE.Quaternion(); \n        this.rotationB = new THREE.Quaternion(); \n        this.fSteer = new THREE.Vector3(0, 0, 0);\n        this.vDesired = new THREE.Vector3(0, 0, 0); \n        \n        // Helper vectors. \n        this.sumVec = new THREE.Vector3(0, 0, 0);\n        this.diffVec = new THREE.Vector3(0, 0, 0); \n\n        // Force and speeds. \n        this.maxSpeed = Utility.getRandomNum(0.03, 0.5); \n\n        // Target value that changes based on the pattern position. \n        this.target = new THREE.Vector3(0, 0, 0); \n\n        // Agent will be animated if it's alive\n        this.isAlive = true;\n    }\n\n    updateBehaviour(nAgents) {\n        // Seek target\n        this.seek();\n\n        // Flock with other nearby pigeons\n        nAgents.forEach( neighbor => {\n            // calculate a directional vec from my neighbor to me\n            this.diffVec.subVectors(this.position, neighbor.position)\n\n            // Pass it down for force calculation\n            this.seperate(this.diffVec); \n\n            this.cohere(this.diffVec);\n\n            this.align(neighbor, this.diffVec);\n        })\n    }\n\n    updatePosition() {\n        // Target velocity. \n        this.sumVec.addVectors(this.velocity, this.acceleration); \n        \n        // What's my intermediate velocity? \n        // Lerp the velocity rather than just updating straight up.\n        this.velocity = this.velocity.lerp(this.sumVec, AgentParams.SmoothFactor); \n        this.velocity.clampLength(-9999, this.maxSpeed); \n\n        this.position.add(this.velocity); \n        this.acceleration.multiplyScalar(0); \n    }\n\n    applyForce() {\n        // Add steering force to acceleration to change the position of the agent. \n        this.acceleration.add(this.fSteer); \n    }\n\n    seek() {\n        // Calculate a desired direction, and multiply it by force. \n        this.vDesired.subVectors(this.target, this.position); \n        this.vDesired.normalize();\n        this.vDesired.multiplyScalar(AgentParams.AttractionForce);\n\n        // Add steering force.\n        this.fSteer.add(this.vDesired); \n    }\n\n    seperate(diffVec) {\n        this.vDesired.copy(diffVec)\n        this.vDesired.normalize(); \n        this.vDesired.multiplyScalar(AgentParams.SeperationForce);\n        this.fSteer.add(this.vDesired)\n    }\n\n    cohere(diffVec) {\n        this.vDesired.copy(diffVec);\n        this.vDesired.multiplyScalar(-1); // Reverse the vector direction to get closer\n        this.vDesired.normalize();\n        this.vDesired.multiplyScalar(AgentParams.CohesionForce);\n        this.fSteer.add(this.vDesired); \n    }\n\n    align(neighbor, diffVec) {\n        this.vDesired.copy(neighbor.velocity);\n        this.vDesired.divideScalar(diffVec.lengthSq()); // Weighted alignment by distance\n        this.vDesired.multiplyScalar(AgentParams.AlignmentForce); // Apply alignment weight. \n        this.fSteer.add(this.vDesired); \n    }\n\n    setTarget(targetPos) {\n        this.target.copy(targetPos);\n    }\n}","/*\r\n  Author: Amay Kataria\r\n  Date: 08/19/2021\r\n  Title: Pigeon.js\r\n  Description: Pigeon class that extends the agent class. It loads the bird model \r\n  and executes high level animations, etc. \r\n*/\r\n\r\nimport * as THREE from 'three'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\r\nimport Agent, { AgentParams } from '../Environment/Agent.js'\r\nimport model from '../../models/New_Bird.glb'; \r\nimport * as Utility from '../Utilities/Utility';\r\n\r\nconst loader = new GLTFLoader(); \r\n\r\nexport default class Pigeon extends Agent {\r\n    constructor(scene) {\r\n        super();\r\n        this.loadPigeon(scene); \r\n    }\r\n\r\n    loadPigeon(scene) {\r\n        loader.load(model, gltf => {\r\n            this.pigeon = gltf.scene; \r\n\r\n            this.pigeon.name = 'pChild';\r\n            \r\n            // Agent is the parent object under which pigeon sits. \r\n            this.parent = new THREE.Group();\r\n            this.parent.add(this.pigeon); \r\n            this.parent.frustumCulled = false;\r\n            this.parent.castShadow = true;\r\n            this.parent.receiveShadow = true; \r\n            this.parent.name = 'pigeon';\r\n\r\n            // Store all the parameters that we'll be changing for this agent. \r\n            this.agentPosition = this.parent.position; \r\n            this.agentRotation = this.parent.rotation; \r\n            this.agentScale = this.parent.scale\r\n            this.agentAnimations = gltf.animations; \r\n\r\n            this.agentScale.set(0.5, 0.5, 0.5); \r\n\r\n            // Setup animation. \r\n            this.animationMixer = new THREE.AnimationMixer(this.parent); \r\n            var action = this.animationMixer.clipAction(this.agentAnimations[0]);\r\n            this.randSeed = Utility.getRandomNum(0.3, 0.8); \r\n            action.play(); \r\n\r\n            // Add it to the scene. \r\n            scene.add(this.parent); \r\n        }, undefined, function ( error ) {\r\n            console.error(error);\r\n        }); \r\n    }\r\n\r\n    update(delta, nAgents) {\r\n        // Animation update. \r\n        if (this.animationMixer) {\r\n\r\n            // Reset steering force. It will accumulate over each behaviour function call \r\n            this.fSteer.set(0, 0, 0);\r\n\r\n            if (this.isAlive){\r\n                // Behaviors. \r\n                this.updateBehaviour(nAgents);  \r\n            }\r\n\r\n            // Gravity pulls agent downwards\r\n            this.fSteer.add(AgentParams.Gravity);\r\n\r\n            // Apply steering force\r\n            this.applyForce();\r\n\r\n            if (this.isAlive) {\r\n                // Animating flipping wings\r\n                this.animationMixer.update(delta * this.acceleration.lengthSq() * 0.15);\r\n            }\r\n\r\n            if (!this.isAlive && this.position.y < 0){\r\n                // Don't update dead agents if they are already on the ground\r\n                return  \r\n            }\r\n\r\n            // Sync rotation and position. \r\n            this.updatePosition();\r\n            this.syncPosition();\r\n            this.syncRotation(); \r\n        }\r\n    }\r\n\r\n    syncPosition() {\r\n        // Sync position of the agent with \r\n        // the actual agent scene. \r\n        this.parent.position.copy(this.position);\r\n    }\r\n\r\n    syncRotation() {\r\n        // // Agent rotation.\r\n        let azimuth, inclination; \r\n        azimuth = Utility.azimuth(this.velocity); \r\n        inclination = Utility.inclination(this.velocity);\r\n\r\n        Utility.axisRotation(0, 1, 0, azimuth, this.rotationA); // Azimuth rotate around Z-axis\r\n        Utility.axisRotation(0, 0, 1, inclination - Math.PI/2, this.rotationB); // Inclination rotate X-axis\r\n                    \r\n        this.rotationA.multiply(this.rotationB);\r\n        this.parent.setRotationFromQuaternion(this.rotationA);\r\n    }\r\n}\r\n\r\n\r\n","import * as THREE from 'three';\n\nexport default class Target {\n    constructor(scene) {\n        let geometry = new THREE.SphereGeometry(0.2, 15, 15);\n        let material = new THREE.MeshLambertMaterial({color: new THREE.Color(1, 0, 0), wireframe: false}); \n        this.mesh = new THREE.Mesh(geometry, material);\n\n        scene.add(this.mesh);\n    }\n\n    getVector() {\n        return this.mesh.position; \n    }\n\n    setVector(v) {\n        this.mesh.position.copy(v);\n    }\n\n    setVisibility(v) {\n        this.mesh.visible = v;\n    }\n}","    /*\r\n  Name: PigeonManager.js\r\n  Author: Amay Kataria\r\n  Date: 09/26/2021\r\n  Description: Container class that manages all the pigeons that are created in the world. \r\n*/\r\n\r\nimport * as THREE from 'three'\r\n\r\nimport { PatternManager } from './PatternManager';\r\nimport { OctreeManager } from './OctreeManager'\r\nimport Pigeon from '../Environment/Pigeon'\r\nimport Target from '../Environment/Target'\r\nimport { MathUtils, Scene } from 'three';\r\nimport Agent, { AgentParams } from '../Environment/Agent';\r\n\r\nconst NUM_PIGEONS = 500; \r\n\r\nexport let TargetParams = {\r\n    ShowTarget: true\r\n}\r\n\r\nclass PigeonManager {\r\n    constructor() {\r\n        // Manages the octree for the pigeons. \r\n        this.octreeManager = new OctreeManager();\r\n\r\n        // Manages the current pattern for the flock. \r\n        this.patternManager = new PatternManager(); \r\n        \r\n        // Container of all the pigeons. \r\n        this.pigeons = [];\r\n        \r\n        // Clock, required for animation of the agents. \r\n        this.clock = new THREE.Clock(); \r\n    }\r\n\r\n    setup(scene, currentPatternType) {\r\n        console.log('Pigeon Manager Pattern: ' + currentPatternType);\r\n        \r\n        this.spawnPigeons(scene);\r\n\r\n        // Create the target object that the pigeons are following. \r\n        this.target = new Target(scene);\r\n\r\n        // Create the target pattern.\r\n        this.patternManager.setTargetPattern(currentPatternType); \r\n    }\r\n\r\n    update() {\r\n        // Do any pigeons exist? \r\n        if (this.pigeons.length > 0) {\r\n            // Don't do anything until we have a valid target position. \r\n            let patternPos = this.patternManager.update(); \r\n            if (patternPos) {\r\n                this.target.setVector(patternPos);\r\n                this.target.setVisibility(TargetParams.ShowTarget);\r\n\r\n                // Update octree. \r\n                // Note: On every update, we instantiate a new octree\r\n                // and populate it with the new pigeon position. So everytime, \r\n                // the neighbors get updated. \r\n                this.octreeManager.update(patternPos, this.pigeons); \r\n\r\n                let nAgents = []; // Neighboring agents. \r\n\r\n                // Delta change in time to advance the animation of the wings. \r\n                let delta = this.clock.getDelta(); \r\n                this.pigeons.forEach(p => {\r\n                    // Update the target's position \r\n                    p.setTarget(patternPos); \r\n                    // Find and update the location of neighboring agents\r\n                    nAgents = this.octreeManager.getNeighbours(p.position); \r\n                    p.update(delta, nAgents);\r\n                });\r\n            }\r\n            \r\n            // Slowly reset some of the agent params that was disturbed by the gun shot\r\n            this.recoverFromShock()\r\n        }\r\n    }\r\n\r\n    setNewPatternType(newPatternType) {\r\n        this.patternManager.setTargetPattern(newPatternType)\r\n    }\r\n\r\n    spawnPigeons(scene) {\r\n        // NOT IMPLEMENTED\r\n        // ISSUES IN CLEANING GEOMETRY!!\r\n        /// Empty the pigeons first. \r\n        // if (this.pigeons.length > 0) {\r\n        //     scene.children.forEach(child => {\r\n        //         if (child.name === 'pigeon') {\r\n        //             child.remove(child[0]);\r\n        //         }\r\n        //     });\r\n        // }\r\n\r\n        // Instantiate pigeons again. \r\n        for (let i = 0; i < NUM_PIGEONS; i++) {\r\n            let p = new Pigeon(scene); \r\n            this.pigeons.push(p);\r\n        }\r\n    }\r\n\r\n    shootPigeon() {\r\n        // Set one randome pigeon to be dead\r\n        let choseOne = MathUtils.randInt(0, this.pigeons.length - 1)\r\n        this.pigeons[choseOne].isAlive = false;\r\n        \r\n        // Gun shot will scare them away\r\n        AgentParams.SeperationForce *= 3\r\n        AgentParams.AttractionForce *= 0.1\r\n    }\r\n\r\n    recoverFromShock() {\r\n        // Separation would decay overtime to recover from gun shot\r\n        AgentParams.SeperationForce *= 0.999;\r\n        AgentParams.SeperationForce = MathUtils.clamp(AgentParams.SeperationForce, 1.2, 2);      \r\n        \r\n        // Agent would focus back on seeking target again\r\n        AgentParams.AttractionForce *= 1.001;\r\n        AgentParams.AttractionForce = MathUtils.clamp(AgentParams.AttractionForce, 0.5, 2);\r\n    }\r\n} \r\n\r\nexport default PigeonManager;","/*\r\n  Name: Websocket.js\r\n  Author: Amay Kataria\r\n  Date: 09/24/2021\r\n  Description: Class responsible for communication with the webserver. We use websockets\r\n  technology for this. Here we have the websocket client, which communicates with backend\r\n  server over websockets.\r\n*/\r\n\r\nimport io  from 'socket.io-client'\r\n\r\n//const localhostURL = \"http://localhost:5000\";\r\nconst herokuURL = \"https://befantastic-martha.herokuapp.com\";\r\n\r\nclass Websocket {\r\n  constructor() {\r\n      this.siteURL = herokuURL + '/app'; \r\n\r\n      this.socket = io(this.siteURL, {\r\n          reconnection: true,\r\n          reconnectionDelay: 500,\r\n          reconnectionAttempts: Infinity\r\n      });\r\n\r\n      this.socket.once('connect', this.subscribe.bind(this));\r\n      this.handlePresetsCbk = ''; \r\n  }\r\n\r\n  subscribe() {\r\n      console.log('Connected');\r\n\r\n      // Subscribe to incoming events from the webserver here. \r\n      this.socket.on('time', this.logTime.bind(this));\r\n      this.socket.on('receivePresets', this.handlePresets.bind(this));\r\n  }\r\n\r\n  handlePresets(data) {\r\n    this.handlePresetsCbk(data); \r\n  }\r\n\r\n  // ----------------------- DATABASE CALLS --------------------- //\r\n  saveGuiPreset(presetName, json) {\r\n      let payload = {\r\n          'name':  presetName, \r\n          'data': json\r\n      }\r\n      this.socket.emit('savePreset', payload); \r\n  }\r\n\r\n  readAllPresets(readPresetsCallback) {\r\n    this.socket.emit('getPresets'); \r\n    this.handlePresetsCbk = readPresetsCallback; // Subscribe to receive data when the call completes. \r\n  }\r\n\r\n  deletePreset(presetName) {\r\n    this.socket.emit('deletePreset', presetName);\r\n  }\r\n\r\n  // -------------------- DON'T CHANGE THESE -------------------    \r\n  disconnect() {\r\n      console.log('Socket Server Disconnected.');\r\n  }\r\n\r\n  logTime(data) {\r\n      //console.log('Socket Connection Alive: ' + data);\r\n  }\r\n}\r\n\r\nexport default new Websocket();\r\n\r\n\r\n","/*\r\n  Name: ServerGui.js\r\n  Author: Amay Kataria\r\n  Date: 09/24/2021\r\n  Description: A tweakpane GUI implementation that stores and loads presets from a backend server. \r\n  The data is transmitted across using a Websocket connection that is maintained throughout the\r\n  lifetime of the application. \r\n*/\r\n\r\nimport { Pane } from 'tweakpane';\r\nimport * as EssentialsPlugin from '@tweakpane/plugin-essentials';\r\nimport _, { times } from 'lodash';\r\n\r\nimport Websocket from './Websocket';\r\n\r\nimport { TargetParams } from '../Managers/PigeonManager';\r\nimport { PatternParams, PatternTypes, EllipseParams, EllipsePattern, RoseCurveParams } from '../Managers/PatternManager.js';\r\nimport { AgentParams } from '../Environment/Agent.js';\r\nimport { OrbitParams } from '../Managers/CameraControl.js'\r\n\r\n// Local params for the GUI. \r\n// Presets is a dynamically populated prop (critical)\r\nlet GuiParams = {\r\n    Preset: 'Global',\r\n    Presets: ''\r\n}\r\nconst PRESETS_IDX = 1; \r\nconst PATTERN_TYPE_IDX =0; \r\n\r\nclass ServerGui {\r\n    constructor(containerComponent) {\r\n        this.gui = new Pane({title: 'Pigeon GUI', container: containerComponent, expanded: false});\r\n        this.gui.registerPlugin(EssentialsPlugin);\r\n\r\n        // Preset name\r\n        this.gui.addInput(GuiParams, 'Preset');\r\n        \r\n        // Presets.\r\n        this.presetOptions = []; // Backup object of all the preset options. // Saves the truth. \r\n        this.buildPresets(); \r\n\r\n        // FPS\r\n        this.fpsGraph = this.gui.addBlade({\r\n            view: 'fpsgraph',\r\n            label: 'FPS',\r\n            lineCount: 2,\r\n        });\r\n\r\n        // Orbit controls. \r\n        let f0 = this.gui.addFolder({ title: 'Orbit Controls', expanded: true });\r\n        f0.addInput(OrbitParams, 'EnableControls', {label: 'Enable Controls'});\r\n        f0.addInput(OrbitParams, 'EnablePan', {label: 'Enable Panning'});\r\n        f0.addInput(OrbitParams, 'AutoRotate', {label: 'Enable AutoRotate'});\r\n        f0.addInput(OrbitParams, 'RotateSpeed', { label: 'Rotation Speed', min: 0.1, max: 1.0 });\r\n        f0.addInput(OrbitParams, 'EnableKeys', {label: 'Enable Keys'});\r\n\r\n        // World Parameters.\r\n        let f1 = this.gui.addFolder({ title: 'Target Params', expanded: true });\r\n        f1.addInput(TargetParams, 'ShowTarget', {label: 'Show Target'});\r\n\r\n        // Pattern Parameters.\r\n        this.patternFolder = this.gui.addFolder({ title: 'Pattern Params', expanded: true });\r\n        this.buildPatternTypeOptions(PatternTypes.Ellipse); // Default pattern type.\r\n        this.buildPatterns(); \r\n\r\n        // Ellipse Parameters. \r\n        this.ellipseParamsFolder = this.patternFolder.addFolder({ title: 'Ellipse Pattern Params', expanded: true });\r\n        this.ellipseParamsFolder.addInput(EllipseParams, 'Origin');\r\n        this.ellipseParamsFolder.addInput(EllipseParams, 'Radii', {\r\n            x: { min: 0, max: 50 },\r\n            y: { min: 0, max: 50 }\r\n        });\r\n        this.ellipseParamsFolder.addInput(EllipseParams, 'Amplitude', { min: 0, max: 10 });\r\n        this.ellipseParamsFolder.addInput(EllipseParams, 'Speed', { min: 0, max: 2 });\r\n        this.ellipseParamsFolder.addInput(EllipseParams, 'Direction'); \r\n\r\n        this.roseCurveParamsFolder = this.patternFolder.addFolder({ title: 'Rose-Curve Pattern Params', expanded: true });\r\n        this.roseCurveParamsFolder.addInput(RoseCurveParams, 'Origin');\r\n        this.roseCurveParamsFolder.addInput(RoseCurveParams, 'Radius', { min: 1, max: 50 });\r\n        this.roseCurveParamsFolder.addInput(RoseCurveParams, 'Phase', { min: 0, max: 10 });\r\n        this.roseCurveParamsFolder.addInput(RoseCurveParams, 'NumPetals', { min: 1, max: 10, step: 1 });\r\n        this.roseCurveParamsFolder.addInput(RoseCurveParams, 'Amplitude', { min: 0, max: 10 });\r\n        this.roseCurveParamsFolder.addInput(RoseCurveParams, 'Sinusoidal');\r\n        this.roseCurveParamsFolder.addInput(RoseCurveParams, 'Direction');\r\n        this.roseCurveParamsFolder.addInput(RoseCurveParams, 'Speed', { min: 0, max: 2 });\r\n\r\n        let f2 = this.gui.addFolder({ title: 'Agent Params', expanded: true});\r\n        f2.addInput(AgentParams, 'AttractionForce', {label: 'AttractionForce', min: 0.5, max: 2, step: 0.05});\r\n        f2.addInput(AgentParams, 'SmoothFactor', {label: 'Smooth Factor', min: 0.005, max: 0.1, step: 0.005});\r\n        f2.addInput(AgentParams, 'SeperationForce', {label: 'Seperation Force', min: 0.5, max: 2, step: 0.1}); \r\n        f2.addInput(AgentParams, 'CohesionForce', {label: 'Cohesion Force', min: 0.1, max: 2, step: 0.1});\r\n        f2.addInput(AgentParams, 'AlignmentForce', {label: 'Alignment Force', min: 0, max: 2, step: 0.1}); \r\n\r\n        // Save Preset button\r\n        this.gui.addButton({title: 'Save Preset'}).on('click', this.onSavePreset.bind(this));       \r\n        this.gui.addButton({title: 'Delete Preset'}).on('click', this.onDeletePreset.bind(this));\r\n        this.gui.addButton({title: 'Show Panel'}).on('click', this.onShowPanel.bind(this)); \r\n        this.gui.addButton({title: 'Spawn Agents'}).on('click', this.onSpawnAgents.bind(this));\r\n        this.gui.addButton({title: 'Shoot Pigeon'}).on('click', this.onShootPigeon.bind(this));\r\n\r\n        // Read presets from the database. \r\n        Websocket.readAllPresets(this.onReceivePresets.bind(this)); \r\n    }\r\n\r\n    onPresetSelected(event) {\r\n        // The value of the select preset is the JSON value. \r\n        let guiJson = JSON.parse(event.value); \r\n        this.gui.importPreset(guiJson);\r\n    }\r\n\r\n    onReceivePresets(data) {\r\n        console.log('All the presets received:');\r\n        console.log(data);\r\n\r\n        // If there are valid presets. \r\n        if (data.length > 0) {\r\n            // Build preset options. \r\n            data.forEach(d => {\r\n                let name = d['name'];\r\n                let config = d['config'];\r\n                // We push here rather than unshift because it's okay to just read this is in the order\r\n                // the entries were pushed in the database. \r\n                this.presetOptions.push({ text: name, value: JSON.stringify(config)});\r\n            }); \r\n            \r\n            // Dispose pattern type list. \r\n            // this.patternTypeList.dispose();   \r\n\r\n            // Get the first preset and set the GUI with that. \r\n            let defaultPresetJSON = data[0]['config'];\r\n            this.gui.importPreset(defaultPresetJSON);\r\n\r\n            // Rebuild the preset controller using this.presetOptions. \r\n            this.disposePresets();\r\n            this.buildPresets();\r\n\r\n            // Build Pattern type options. \r\n            this.currentPatternType = defaultPresetJSON['PatternType'];  \r\n            this.buildPatternTypeOptions(); \r\n            this.disposePatterns();\r\n            this.buildPatterns(); \r\n            this.showPatternParams(); \r\n        }\r\n    }\r\n\r\n    onSavePreset() {\r\n        let presetName = GuiParams.Preset; \r\n        if (presetName.length > 0) {\r\n            // Clear the presets first. \r\n            this.disposePresets(); \r\n            let json = this.gui.exportPreset(); \r\n\r\n            // Does this preset exist? \r\n            let preset = _.find(this.presetOptions, p => {\r\n                return p.text === presetName;\r\n            });\r\n\r\n            if (preset) {\r\n                // Update local json of the preset.\r\n                console.log('Preset Exists. Updating database and local copy of the preset.');\r\n                preset.value = JSON.stringify(json);\r\n                // NOTE: Update the preset options array to maintain the order of the updated presets. \r\n                // Unfortunately, we need to rebuild the presets everytime and we want to make sure \r\n                // the order of presets doesn't change. \r\n                this.presetOptions = _.sortBy(this.presetOptions, ({text}) => { \r\n                    return text === presetName ? 0: 1;\r\n                });\r\n            } else {\r\n                console.log('Preset doesnt exist. New entry in the database.');\r\n                this.presetOptions.unshift({ text: presetName, value: JSON.stringify(json)} );\r\n            }\r\n\r\n            // Update database. \r\n            Websocket.saveGuiPreset(presetName, json); \r\n\r\n            // Rebuild the presets. \r\n            this.buildPresets(); \r\n        } else {\r\n            alert('Not an empty entry please.');\r\n        }\r\n    }\r\n\r\n    onDeletePreset() {\r\n        if (this.presetOptions.length > 0) {\r\n            let presetName = GuiParams.Preset; \r\n            console.log('Deleting preset: ' + presetName);\r\n\r\n            // Remove that element from the array. \r\n            // Updates the original array. \r\n            _.remove(this.presetOptions, p => p.text === presetName); \r\n\r\n            // Delete the preset from the database. \r\n            Websocket.deletePreset(presetName); \r\n\r\n            // Rebuild the preset list. \r\n            this.disposePresets(); \r\n            this.buildPresets();\r\n\r\n            // Maybe I'm the last entry in the database. \r\n            if (this.presetOptions.length > 0) {\r\n                // Get preset options for the first preset options entry. \r\n                let presetJson = this.presetOptions[0].value; \r\n                this.gui.importPreset(JSON.parse(presetJson));\r\n            }\r\n        }\r\n    }\r\n\r\n    disposePresets() {\r\n        GuiParams.Presets = '';\r\n        this.presetList.dispose();\r\n    }\r\n\r\n    buildPresets() {\r\n        this.presetList = this.gui.addInput(GuiParams, 'Presets', {\r\n            index: PRESETS_IDX,\r\n            options: this.presetOptions\r\n        }); \r\n        this.presetList.on('change', this.onPresetSelected.bind(this));\r\n    }\r\n\r\n    buildPatternTypeOptions() {\r\n        if (this.currentPatternType === PatternTypes.Ellipse) {\r\n            this.patternTypeOptions = { Ellipse: PatternTypes.Ellipse, RoseCurve: PatternTypes.RoseCurve };\r\n        } else if (this.currentPatternType === PatternTypes.RoseCurve) {\r\n            this.patternTypeOptions = { RoseCurve: PatternTypes.RoseCurve, Ellipse: PatternTypes.Ellipse };\r\n        } else {\r\n            this.patternTypeOptions = { Ellipse: PatternTypes.Ellipse, RoseCurve: PatternTypes.RoseCurve }; // Default pattern type. \r\n        }\r\n    }\r\n\r\n    disposePatterns() {\r\n        this.patternList.dispose();\r\n    }\r\n\r\n    buildPatterns() {\r\n        this.patternList = this.patternFolder.addInput(PatternParams, 'PatternType', {\r\n            label: 'Pattern Type',\r\n            index: PATTERN_TYPE_IDX,\r\n            options: this.patternTypeOptions\r\n        }); \r\n        this.patternList.on('change', this.onPatternSelected.bind(this)); \r\n    }\r\n\r\n    onPatternSelected(ev) {\r\n        this.currentPatternType = ev.value;\r\n        this.showPatternParams();\r\n\r\n        // Fire the callback to notify that the pattern has changed.\r\n        this.patternChangeUpdate(this.currentPatternType); \r\n    }\r\n\r\n    showPatternParams() {\r\n        if (this.currentPatternType === PatternTypes.Ellipse) {\r\n            this.ellipseParamsFolder.hidden = false; \r\n            this.roseCurveParamsFolder.hidden = true; \r\n        } else if (this.currentPatternType === PatternTypes.RoseCurve) {\r\n            this.ellipseParamsFolder.hidden = true; \r\n            this.roseCurveParamsFolder.hidden = false;\r\n        }\r\n    }\r\n\r\n    subscribeForPatternChange(callback) {\r\n        this.patternChangeUpdate = callback; \r\n    }\r\n\r\n    subscribeShowPanel(callback) {\r\n        this.onShowPanelCallback = callback; \r\n    }\r\n\r\n    onShowPanel() {\r\n        this.onShowPanelCallback(); \r\n    }  \r\n\r\n    subscribeSpawnAgents(callback) {\r\n        this.onSpawnAgentCallback = callback; \r\n    }\r\n\r\n    onSpawnAgents() {\r\n        this.onSpawnAgentCallback(); \r\n    }\r\n\r\n    subscribeShootPigeon(callback) {\r\n        this.onShootPigeonCallback = callback;\r\n    }\r\n\r\n    onShootPigeon(){\r\n        this.onShootPigeonCallback();\r\n    }\r\n} \r\n\r\n// Keep a singleton instance of this - through App.js\r\nexport default ServerGui;","/*\r\n  Name: GuiPanel.js\r\n  Author: Amay Kataria\r\n  Date: 09/26/2021\r\n  Description: This is the container component where the GUI is placed in the project. It needs to be outside \r\n  the way of the title. We just move it slightly lower from the top. \r\n*/\r\n\r\nimport React from 'react'\r\nimport Radium from 'radium'\r\nimport ServerGui from '../Utilities/ServerGui';\r\n\r\nconst styles = {\r\n    container: {\r\n        position: 'absolute',\r\n        top: '120px',\r\n        left: '35px'\r\n    }\r\n};\r\n\r\nclass GuiPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n    };\r\n\r\n    this.guiRef = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div ref={this.guiRef} style={styles.container}></div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    let containerComponent = this.guiRef.current; \r\n    this.gui = new ServerGui(containerComponent); \r\n    this.gui.subscribeShowPanel(this.onShowPanel.bind(this));\r\n    this.gui.subscribeSpawnAgents(this.onSpawnAgents.bind(this));\r\n    this.gui.subscribeShootPigeon(this.onShootPigeon.bind(this));\r\n  }\r\n\r\n  getFpsGraph() {\r\n      return this.gui.fpsGraph; \r\n  }\r\n\r\n  onShowPanel() {\r\n    this.props.onShowInfoPanel(); \r\n  }\r\n\r\n  onSpawnAgents() {\r\n    this.props.onSpawnAgents();\r\n  }\r\n\r\n  onShootPigeon() {\r\n    this.props.onShootPigeon();\r\n  }\r\n\r\n  subscribeForPatternChange(callback) {\r\n    this.gui.subscribeForPatternChange(callback);\r\n  }\r\n\r\n  getCurPatternType() {\r\n    return this.gui.currentPatternType; \r\n  }\r\n}\r\n\r\nexport default Radium(GuiPanel);","const color = {\n    white: '#ffffff',\n    darkWithAlpha: 'rgb(0, 0, 0, 0.4)',\n    button: 'rgb(255, 255, 255, 0.4)',\n    link: '#D34C00',\n    panel: '#E7EFE0'\n};\n\nconst fontSize = {\n    extraSmall: '8px',\n    verySmall: '12px',\n    lessSmall: '14px',\n    small: '16px',\n    lessBig: '18px',\n    big: '20px',\n    veryBig: '24px',\n    extraBig: '28px',\n    huge: '32px',\n    veryHuge: '36px',\n    extraHuge: '40px',\n    massive: '44px',\n    veryMassive: '48px',\n    extraMassive: '52px',\n    enormous: '56px',\n    veryEnormous: '60px',\n    extraEnormous: '64px',\n    insane: '68px',\n    veryInsane: '72px',\n    extraInsane: '76px',\n    gaia: '80px',\n    veryGaia: '84px',\n    extraGaia: '88px'\n};\n\nconst padding = {\n    // Increments of 4\n    extraSmall: '4px',\n    verySmall: '8px',\n    small: '12px',\n    // Incremenets of 8\n    big : '20px',\n    veryBig : '28px',\n    extraBig : '36px',\n    // Increments of 12\n    huge: '52px',\n    veryHuge: '64px',\n    extraHuge: '76px',\n    // Incremenets of 16\n    massive: '92px',\n    veryMassive: '108px',\n    extraMassive: '124px',\n    // Increment of 20\n    enourmous: '100px',\n    veryEnormous: '120px',\n    extraEnormous: '140px',\n    // Increment of 40\n    insane: '160px',\n    veryInsane: '200px',\n    extraInsane: '240px'\n\n};\n\nconst fontFamily = {\n    din: 'd-dinregular',\n    opensanslight: 'open_sanslight',\n    opensansregular: 'open_sansregular',\n    demode: 'demoderegular',\n    slice: 'sliceregular',\n    warsaw: 'warsaw_gothic'\n};\n\n\nexport { color, fontSize, fontFamily, padding };","/*\r\n  Name: EnterPanel.js\r\n  Author: Amay Kataria\r\n  Date: 09/26/2021\r\n  Description: This is the first panel that the user sees. It's the overlay panel when the user comes to the website. \r\n  It has a transparent finish so one can see the terrain underneath it. It shows the title of the project and the \r\n  Enter button to enter the website. \r\n*/\r\n\r\nimport React from 'react'\r\nimport Radium from 'radium'\r\n\r\nimport { fontFamily, color, fontSize, padding } from '../Utilities/CommonStyles.js'\r\n\r\nconst styles = {\r\n    container: {\r\n        position: 'absolute',\r\n        top: '0%',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        backgroundColor: color.darkWithAlpha,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 0\r\n    },\r\n\r\n    hide: {\r\n        visibility: 'hidden'\r\n    },\r\n\r\n    title: {\r\n        fontFamily: fontFamily.warsaw,\r\n        fontSize: fontSize.extraMassive,\r\n        letterSpacing: 5,\r\n        opacity: 1,\r\n        color: color.white,\r\n    },\r\n\r\n    loading: {\r\n        fontFamily: fontFamily.din,\r\n        fontSize: fontSize.veryBig, \r\n        color: color.white\r\n    },\r\n\r\n    button: {\r\n        fontFamily: fontFamily.din,\r\n        color: color.white,\r\n        fontSize: fontSize.veryBig,\r\n        borderStyle: 'solid',\r\n        borderWidth: '2px',\r\n        padding: padding.verySmall,\r\n        paddingLeft: padding.veryBig,\r\n        paddingRight: padding.veryBig,\r\n        cursor: 'default'\r\n    }\r\n};\r\n\r\nconst Load_Time = 0; // 3 seconds for now. // Change it back once we are ready.\r\n\r\nclass EnterPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Initial render of the component. \r\n    // NOTE: Whenever a component's state is updated, render is called. \r\n    this.state={\r\n        isHidden: false,\r\n        isLoading: false\r\n    };\r\n  }\r\n\r\n  // Overriding React function. \r\n  render() {\r\n    let containerStyle = this.state.isHidden ? [styles.container, styles.hide] : styles.container;\r\n    let content = this.state.isLoading ? this.getLoader() : this.getTitle(); \r\n    return (\r\n      <div style={containerStyle}>\r\n          {content}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getLoader() {\r\n    return (<div style={styles.loading}>Loading ...</div>); \r\n  }\r\n\r\n  getTitle() {\r\n    return (\r\n        <React.Fragment>\r\n            <div style={styles.title}>MARTHA.I</div>\r\n            <div onClick={this.onEnter.bind(this)} style={styles.button}>ENTER</div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n\r\n  onEnter() {\r\n    this.setState({\r\n        isLoading: true\r\n    });\r\n\r\n    // Tell the world that the user has\r\n    // clicked on enter. \r\n    this.props.onEnterWorld(); \r\n\r\n    // Schedule a cleanup here. \r\n    setTimeout(this.hasFinishedLoading.bind(this), Load_Time); \r\n  }\r\n\r\n  hasFinishedLoading() {\r\n    this.setState({\r\n        isHidden: true\r\n    }); \r\n\r\n    // Tel the world that load is complete. \r\n    this.props.onLoadComplete(); \r\n  }\r\n}\r\n\r\nexport default Radium(EnterPanel);","/*\r\n  Name: Title.js\r\n  Author: Amay Kataria\r\n  Date: 09/26/2021\r\n  Description: This components holds the title of the project and the about button\r\n*/\r\n\r\nimport React from 'react'\r\nimport Radium from 'radium'\r\n\r\nimport { fontFamily, color, fontSize, padding } from '../Utilities/CommonStyles.js'\r\n\r\nconst animation = {\r\n    floatIn: Radium.keyframes({\r\n      '0%': {\r\n        top: '-100px'\r\n      },\r\n      '50%': {\r\n        top: '-50px',\r\n      },\r\n      '100%': {\r\n        top: '0px',\r\n      }\r\n    }),\r\n  \r\n    floatOut: Radium.keyframes({\r\n      '0%': {\r\n        top: '0'\r\n      },\r\n      '50%': {\r\n        top: '-50px',\r\n      },\r\n      '100%': {\r\n        top: '-100px'\r\n      }\r\n    })\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        top: '-100px'\r\n    },\r\n\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        padding: padding.extraBig,\r\n        alignSelf: 'center',\r\n    },\r\n\r\n    animateIn: {\r\n        animation: 'x 2s linear 1 forwards',\r\n        animationName: animation.floatIn\r\n    },\r\n\r\n    animateOut: {\r\n        animation: 'x 2s linear 1 forwards',\r\n        animationName: animation.floatOut\r\n    },\r\n\r\n    title: {\r\n        fontFamily: fontFamily.warsaw,\r\n        fontSize: fontSize.massive,\r\n        letterSpacing: 5,\r\n        opacity: 1,\r\n        color: color.white,\r\n        cursor: 'default'\r\n    },\r\n\r\n    about: {\r\n        fontFamily: fontFamily.din,\r\n        color: color.white,\r\n        fontSize: fontSize.massive,\r\n        cursor: 'default'\r\n    }\r\n};\r\n\r\nlet ANIMATION_STATE = {\r\n    NONE: 0,\r\n    SHOW: 1, \r\n    HIDE: 2\r\n};\r\n\r\nclass Title extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={ \r\n        aniState: ANIMATION_STATE.NONE\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let containerStyle = this.state.aniState === ANIMATION_STATE.SHOW ? [styles.container, styles.animateIn] : \r\n        this.state.aniState === ANIMATION_STATE.HIDE ? [styles.container, styles.animateOut] : styles.container;\r\n    return (\r\n      <div style={containerStyle} >\r\n          <div style={styles.content}>\r\n            <div style={styles.title}>MARTHA.I</div>\r\n            <div onClick={this.handleAboutClick.bind(this)} style={styles.title}>ABOUT</div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  updateTitle() {\r\n    if (this.state.aniState === ANIMATION_STATE.NONE) {\r\n        this.setState({\r\n            aniState: ANIMATION_STATE.SHOW\r\n        });\r\n    } else if (this.state.aniState === ANIMATION_STATE.SHOW) {\r\n        this.setState({\r\n            aniState: ANIMATION_STATE.HIDE\r\n        });\r\n    } else if (this.state.aniState === ANIMATION_STATE.HIDE) {\r\n        this.setState({\r\n            aniState: ANIMATION_STATE.SHOW\r\n        }); \r\n    }\r\n  }\r\n\r\n  handleAboutClick() {\r\n    this.props.onClickAbout();\r\n  }\r\n}\r\n\r\nexport default Radium(Title);","/*\r\n  Name: InfoPanel.js\r\n  Author: Amay Kataria\r\n  Date: 09/26/2021\r\n  Description: This is the side panel that gets pulled out when something is raycasted or selected in the world. \r\n*/\r\n\r\nimport React from 'react'\r\nimport Radium from 'radium'\r\n\r\nimport { fontFamily, color, fontSize, padding } from '../Utilities/CommonStyles.js'\r\n\r\nconst animation = {\r\n    slideIn: Radium.keyframes({\r\n      '0%': {\r\n        left: '-500px'\r\n      },\r\n      '50%': {\r\n        left: '-250px',\r\n      },\r\n      '100%': {\r\n        left: '0px',\r\n      }\r\n    }),\r\n  \r\n    slideOut: Radium.keyframes({\r\n      '0%': {\r\n        left: '0px'\r\n      },\r\n      '50%': {\r\n        left: '-250px',\r\n      },\r\n      '100%': {\r\n        left: '-500px'\r\n      }\r\n    })\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        position: 'absolute',\r\n        top: '0%',\r\n        width: '500px',\r\n        height: '100%',\r\n        left: '-500px',\r\n        backgroundColor: color.panel\r\n    },\r\n\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        padding: padding.extraBig,\r\n        alignSelf: 'center'\r\n    },\r\n\r\n    animateIn: {\r\n        animation: 'x 2s linear 1 forwards',\r\n        animationName: animation.slideIn\r\n    },\r\n\r\n    animateOut: {\r\n        animation: 'x 2s linear 1 forwards',\r\n        animationName: animation.slideOut\r\n    },\r\n\r\n    title: {\r\n        fontFamily: fontFamily.warsaw,\r\n        fontSize: fontSize.massive,\r\n        letterSpacing: 5,\r\n        opacity: 1,\r\n        color: color.white,\r\n        cursor: 'default'\r\n    },\r\n\r\n    about: {\r\n        fontFamily: fontFamily.din,\r\n        color: color.white,\r\n        fontSize: fontSize.massive,\r\n        cursor: 'default'\r\n    }\r\n};\r\n\r\nlet ANIMATION_STATE = {\r\n    NONE: 0,\r\n    SHOW: 1,\r\n    HIDE: 2\r\n}\r\n\r\nclass InfoPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n        aniState: ANIMATION_STATE.NONE\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let containerStyle = this.state.aniState === ANIMATION_STATE.SHOW ? [styles.container, styles.animateIn] : \r\n        this.state.aniState === ANIMATION_STATE.HIDE ? [styles.container, styles.animateOut] : styles.container;\r\n\r\n    return (\r\n      <div style={containerStyle} >\r\n          <div style={styles.content}>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  updatePanel() {\r\n      if (this.state.aniState === ANIMATION_STATE.NONE) {\r\n          this.setState({\r\n              aniState: ANIMATION_STATE.SHOW\r\n          });\r\n      } else if (this.state.aniState === ANIMATION_STATE.SHOW) {\r\n          this.setState({\r\n              aniState: ANIMATION_STATE.HIDE\r\n          });\r\n      } else if (this.state.aniState === ANIMATION_STATE.HIDE) {\r\n          this.setState({\r\n              aniState: ANIMATION_STATE.SHOW\r\n          }); \r\n      }\r\n  }\r\n}\r\n\r\nexport default Radium(InfoPanel);","/*\r\n  Name: SectionPanel.js\r\n  Author: Amay Kataria\r\n  Date: 09/30/2021\r\n  Description: Each section that contains information about the website. This content is passed in from ContentPanel. \r\n*/\r\n\r\nimport React from 'react'\r\nimport Radium from 'radium'\r\n\r\nconst styles = {\r\n    container: {\r\n        position: 'relative',\r\n        width: '100vw',\r\n        height: '1000px'\r\n    },\r\n\r\n    colorA: {\r\n        backgroundColor: 'black'\r\n    },\r\n\r\n    colorB: {\r\n        backgroundColor: 'green'\r\n    }\r\n};\r\n\r\nclass SectionPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n    };\r\n\r\n  }\r\n\r\n  render() {\r\n    let containerStyles = this.props.panelNum === 0 ? [styles.container, styles.colorA] : [styles.container, styles.colorB]; \r\n    return (\r\n      <div style={containerStyles}></div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Hello');\r\n  }\r\n\r\n  scroll() {\r\n    setTimeout(() => {\r\n      this.panelRef.current.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'start'\r\n      });\r\n    }, 50); // Give a little timeout so the panel can be made visible first.\r\n  }\r\n}\r\n\r\nexport default Radium(SectionPanel);","/*\r\n  Name: ContentPanel.js\r\n  Author: Amay Kataria\r\n  Date: 09/30/2021\r\n  Description: Collection of information panels that contain information about the website. \r\n*/\r\n\r\nimport React from 'react'\r\nimport Radium from 'radium'\r\n\r\nimport SectionPanel from './SectionPanel';\r\n\r\nconst styles = {\r\n    container: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    }\r\n};\r\n\r\nclass ContentPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n    };\r\n\r\n    this.panelRef = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div ref={this.panelRef} style={styles.container}>\r\n        <SectionPanel panelNum={0} />\r\n        <SectionPanel panelNum={1} />\r\n        <SectionPanel panelNum={0} />\r\n        <SectionPanel panelNum={1} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Hello');\r\n  }\r\n\r\n  scroll() {\r\n    setTimeout(() => {\r\n      this.panelRef.current.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'start'\r\n      });\r\n    }, 50); // Give a little timeout so the panel can be made visible first.\r\n  }\r\n}\r\n\r\nexport default Radium(ContentPanel);","/*\n  Name: World.js\n  Author: Amay Kataria\n  Date: 08/19/2021\n  Description: This is where Three.js world is initialized. It's the entry point for the three-dimensional \n  world and creating all elements. \n*/\n\nimport React from 'react'\nimport Radium from 'radium'\nimport * as THREE from 'three'\n\n// Utility components\nimport Terrain from '../Environment/Terrain.js'\nimport CameraControl from '../Managers/CameraControl.js'\nimport LightingManager from '../Managers/LightingManager.js'\nimport RendererManager from '../Managers/RendererManager.js'\nimport PigeonManager from '../Managers/PigeonManager.js'\n\n// Interface components. \nimport GuiPanel from './GuiPanel.js'\nimport EnterPanel from './EnterPanel.js'\nimport Title from './Title.js'\nimport InfoPanel from './InfoPanel.js'\n\nimport landscape from '../../assets/landscape.jpg'\nimport clouds from '../../assets/gaugan.mp4'\nimport Panel from './ContentPanel.js'\n\nconst styles = {\n  container: {\n    width: '100vw', \n    height: '100vh',\n    overflow: 'hidden'\n  },\n\n  video: {\n    display: 'none'\n  }\n};\n\nclass World extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={};\n\n    // Reference to the components that need to be accesed. \n    this.worldRef = React.createRef(); \n    this.guiRef = React.createRef(); \n    this.titleRef = React.createRef(); \n    this.panelRef = React.createRef(); \n    this.videoRef = React.createRef();\n    \n    // 3D scene object where everything is added. \n    this.scene = new THREE.Scene(); \n\n    // Camera & Interactive controls module. \n    this.cameraControl = new CameraControl(); \n\n    // Lights.\n    this.lightingManager = new LightingManager(this.scene); \n\n    // Pigeons\n    this.pigeonManager = new PigeonManager(); \n\n    // Instantiate terrain geometry.\n    // this.terrain = new Terrain(this.scene); \n\n    // Three.js Renderer\n    this.rendererManager = new RendererManager(); \n  }\n\n  componentDidMount() {\n    // Mount the canvas at the current div. \n    let rendererDomElement = this.rendererManager.getDomElement(); \n    this.worldRef.current.appendChild(rendererDomElement); \n\n    // Get the handle to the FPS graph component. \n    this.fpsGraph = this.guiRef.current.getFpsGraph(); \n    this.guiRef.current.subscribeForPatternChange(this.onPatternChanged.bind(this));\n\n    // This is the initial render. \n    // Initialize the recursive rendering call. \n    this.initializeRender(); \n\n    this.addSkybox();\n    //this.addSkySphere();\n  }\n\n  // Component render. \n  render() {\n    return (\n      <div style={styles.container} ref={this.worldRef}>\n        <GuiPanel \n          ref={this.guiRef} \n          onShowInfoPanel={this.onShowInfoPanel.bind(this)}\n          onSpawnAgents={this.onSpawnAgents.bind(this)}\n          onShootPigeon={this.onShootPigeon.bind(this)}\n        />\n        <EnterPanel \n          onEnterWorld={this.onEnterWorld.bind(this)} \n          onLoadComplete={this.onLoadComplete.bind(this)}\n        />\n        <Title onClickAbout={this.onClickAbout.bind(this)} ref={this.titleRef} />\n        <InfoPanel ref={this.panelRef} />\n        <video id={'video'} ref={this.videoRef} playsInline loop src={clouds} style={styles.video} />\n      </div>\n    );\n  }\n\n  // CORE Three.js recursive render loop. \n  initializeRender() {\n    this.fpsGraph.begin();\n      this.pigeonManager.update(); \n      this.cameraControl.update();\n      // This renders each frame. \n      this.rendererManager.render(this.scene, this.cameraControl.getCamera());      \n    this.fpsGraph.end();\n\n    // Register this function as a callback to every repaint from the browser.\n    requestAnimationFrame(this.initializeRender.bind(this)); \n  }\n\n  addSkybox() {\n    // const texture = new THREE.TextureLoader().load(landscape);\n    const texture = new THREE.VideoTexture(this.videoRef.current);\n    // texture.wrapS = THREE.MirroredRepeatWrapping;\n    const geometry = new THREE.BoxGeometry(70, 70, 70);\n    const material = new THREE.MeshBasicMaterial( {side: THREE.BackSide, map: texture} );\n    const cube = new THREE.Mesh( geometry, material );\n    this.scene.add(cube);\n  }\n\n  addSkySphere() {\n    //const texture = new THREE.TextureLoader().load(landscape);   ;\n    const texture = new THREE.VideoTexture(this.videoRef.current);\n    const geometry = new THREE.SphereGeometry(100, 100, 100); \n    const material = new THREE.MeshBasicMaterial( {side: THREE.BackSide, map: texture});\n    const sphere = new THREE.Mesh (geometry, material);\n\n    this.scene.add(sphere);\n  }\n\n  onEnterWorld() {\n    // Instantiate pigeon geometry. \n    this.videoRef.current.play();\n    let currentPatternType = this.guiRef.current.getCurPatternType(); \n    this.pigeonManager.setup(this.scene, currentPatternType); \n  }\n\n  onLoadComplete() {\n    // Kick off a camera animation to go somewhere into the agent. \n    // Animate the Title-In. \n    this.titleRef.current.updateTitle(); \n  }\n  \n  onShowInfoPanel() {\n    this.panelRef.current.updatePanel(); \n    this.titleRef.current.updateTitle(); \n  }\n\n  onPatternChanged(newPatternType) {\n    this.pigeonManager.setNewPatternType(newPatternType);\n  }\n\n  onSpawnAgents() {\n    this.pigeonManager.spawnPigeons(this.scene);\n  }\n\n  onShootPigeon() {\n    this.pigeonManager.shootPigeon();\n  }\n\n  onClickAbout() {\n    this.props.onScroll(); \n  }\n}\n\nexport default Radium(World);\n\n\n// const Raycaster = new THREE.Raycaster();\n// const mouse = new THREE.Vector2(); \n\n// onMouseMove(event) {\n//   //mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n//   //mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n//   // console.log(mouse.x + ', ' + mouse.y);\n// }\n\n// onClick(event) {\n//   // mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n//   // mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\n//   // Raycaster.setFromCamera(mouse, this.camera);\n\n//   // // calculate objects intersecting the picking ray\n//   // const intersects = Raycaster.intersectObject(this.terrain.getMesh(), true);\n//   // for (let i = 0; i < intersects.length; i ++) {\n//   //   //intersects[ i ].object.material.color.set( 0xff0000 );\n//   // }\n//   // console.log('Mouse Clicked');\n\n//   let a = this.gui.getSaveObject();\n//   console.log(a);\n// }\n// window.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n// //window.addEventListener('click', this.onClick.bind(this), true)","/*\n  Name: App.js\n  Author: Amay Kataria\n  Date: 08/19/2021\n  Description: Entry point for the application.\n*/\n\nimport React from 'react'\nimport Radium from 'radium'\nimport World from './Interface/World.js'\nimport ContentPanel from './Interface/ContentPanel.js';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n\n  panelStyles: {\n    position: 'relative',\n    display: 'none'\n  },\n\n  panelVisible: {\n    display: 'block'\n  }\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      showPanel: false\n    };\n\n    this.worldRef = React.createRef(); \n    this.contentPanelRef = React.createRef();\n  }\n\n  render() {\n    let panelStyles = this.state.showPanel ? [styles.panelStyles, styles.panelVisible] : [styles.panelStyles];\n    return (\n      <div style={styles.container}>\n        <World onScroll={this.onScrollDown.bind(this)} ref={this.worldRef} />\n        <div style={panelStyles}>\n          <ContentPanel ref={this.contentPanelRef} />\n        </div>\n      </div>\n    );\n  }\n\n  onScrollDown() {\n    this.setState({\n      showPanel: true\n    });\n\n    // Trigger scroll.\n    this.contentPanelRef.current.scroll();\n  }\n}\n\nexport default Radium(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './font/stylesheet.css';\nimport App from './components/App';\nimport {StyleRoot} from 'radium'\n\n// Use StyleRoot to enable keyframes and media queries for Javascript type\n// styles with Radium in components. \n// Single render function for the entire application. \nReactDOM.render(<StyleRoot><App /></StyleRoot>, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/world.9a0ad0bd.glb\";","module.exports = __webpack_public_path__ + \"static/media/New_Bird.7c4dad5e.glb\";"],"sourceRoot":""}