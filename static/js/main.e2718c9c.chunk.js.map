{"version":3,"sources":["components/Environment/Terrain.js","components/Managers/CameraControl.js","components/Managers/LightingManager.js","components/Managers/RendererManager.js","components/Managers/PatternManager.js","components/Managers/OctreeManager.js","components/Utilities/Utility.js","components/Environment/Agent.js","components/Environment/Pigeon.js","components/Environment/Target.js","components/Managers/PigeonManager.js","components/Utilities/Websocket.js","components/Utilities/ServerGui.js","components/Interface/GuiPanel.js","components/Utilities/CommonStyles.js","components/Interface/EnterPanel.js","components/Interface/Title.js","components/Interface/InfoPanel.js","components/Interface/World.js","components/App.js","index.js","models/world.glb","models/Bird_simple.glb"],"names":["loader","GLTFLoader","Terrain","scene","this","loadTerrain","load","terrain","gltf","parent","THREE","add","frustumCulled","castShadow","receiveShadow","terrainPosition","position","terrainRotation","rotation","terrainScale","scale","set","undefined","error","console","OrbitControls","oc","OrbitParams","EnableControls","EnablePan","AutoRotate","RotateSpeed","EnableKeys","CameraControl","camera","window","innerWidth","innerHeight","lookAt","controls","updateControls","update","enablePan","autoRotate","autoRotateSpeed","enabled","enableKeys","LightingManager","directionalLight","intensity","normalize","RendererManager","renderer","antialias","setClearColor","setSize","setPixelRatio","devicePixelRatio","outputEncoding","domElement","render","Pattern","patternObj","theta_rad","amp","isClockwise","dir","originPos","pos","moveFactor","move","targetPos","maxTheta","r","x","Math","cos","z","sin","y","EllipsePattern","radX","radx","radZ","radz","PI","xPos","cartesianX","zPos","cartesianZ","yPos","cartesianY","updateTheta","ellipseParams","originPosX","originPosY","originPosZ","radiusX","radiusZ","amplitude","degToRad","speed","Octree","origin","boundary","min","Vector3","max","tree","PointOctree","agent","insert","radius","findPoints","pointCount","OctreeManager","flockOctree","flockTarget","liarbirds","setupOctree","forEach","l","insertPoint","nAgents","scanForPoints","n","a","push","axisRotation","axis_x","axis_y","axis_z","angle_radians","q","norm","sqrt","AgentParams","MaxForce","SmoothFactor","SeperationForce","CohesionForce","AlignmentForce","Agent","random","velocity","acceleration","rotationA","rotationB","fSteer","vDesired","sumVec","diffVec","maxSpeed","getRandomArbitrary","maxSlowDownSpeed","slowDownTolerance","arriveTolerance","target","seekTarget","flock","updatePosition","seek","applyForce","length","seperation","cohesion","align","addVectors","lerp","clampLength","multiplyScalar","subVectors","value","low1","high1","low2","high2","d","lengthSq","newMaxSpeed","divideScalar","sub","copy","Pigeon","loadPigeon","model","pigeon","agentPosition","agentRotation","agentScale","agentAnimations","animations","animationMixer","clipAction","play","delta","updateAgent","syncPosition","syncRotation","azimuth","inclination","v","atan2","acos","Utility","multiply","setRotationFromQuaternion","Target","geometry","material","color","wireframe","mesh","visible","TargetParams","ShowTarget","PigeonManager","octreeManager","pigeons","clock","setupTargetPattern","i","p","ellipseConstructor","ellipsePattern","patternPos","getTargetPos","getDelta","setTarget","getNeighbours","setVector","setVisibility","siteURL","herokuURL","socket","io","reconnection","reconnectionDelay","reconnectionAttempts","Infinity","once","subscribe","bind","handlePresetsCbk","log","on","logTime","handlePresets","data","presetName","json","payload","emit","readPresetsCallback","GuiParams","Preset","Presets","ServerGui","containerComponent","gui","Pane","title","container","expanded","registerPlugin","EssentialsPlugin","addInput","presetOptions","buildPresets","fpsGraph","addBlade","view","label","lineCount","f0","addFolder","f2","step","addButton","onSavePreset","onDeletePreset","onShowPanel","Websocket","readAllPresets","onReceivePresets","event","guiJson","JSON","parse","importPreset","name","config","text","stringify","defaultPresetJSON","disposePresets","exportPreset","preset","_","find","sortBy","unshift","saveGuiPreset","alert","remove","deletePreset","presetJson","presetList","dispose","index","options","onPresetSelected","callback","styles","top","right","GuiPanel","props","state","guiRef","React","createRef","ref","style","current","subscribeShowPanel","onShowInfoPanel","Component","Radium","fontSize","padding","fontFamily","width","height","backgroundColor","display","flexDirection","alignItems","justifyContent","zIndex","hide","visibility","letterSpacing","opacity","loading","button","borderStyle","borderWidth","paddingLeft","paddingRight","cursor","EnterPanel","isHidden","isLoading","containerStyle","content","getLoader","getTitle","Fragment","onClick","onEnter","setState","onEnterWorld","setTimeout","hasFinishedLoading","onLoadComplete","animation","floatIn","keyframes","floatOut","alignSelf","animateIn","animationName","animateOut","about","ANIMATION_STATE","Title","aniState","slideIn","left","slideOut","InfoPanel","overflow","World","worldRef","titleRef","panelRef","cameraControl","lightingManager","pigeonManager","rendererManager","rendererDomElement","getDomElement","appendChild","getFpsGraph","initializeRender","begin","getCamera","end","requestAnimationFrame","setup","updateTitle","updatePanel","App","ReactDOM","document","getElementById","module","exports"],"mappings":"+UAaMA,EAAS,IAAIC,IAEEC,E,WACjB,WAAYC,GAAQ,oBAChBC,KAAKC,YAAYF,G,+CAGrB,SAAYA,GAAQ,IAAD,OACfH,EAAOM,KAAKC,KAAS,SAAAC,GACjB,EAAKD,QAAUC,EAAKL,MAGpB,EAAKM,OAAS,IAAIC,QAClB,EAAKD,OAAOE,IAAI,EAAKJ,SACrB,EAAKE,OAAOG,eAAgB,EAC5B,EAAKH,OAAOI,YAAa,EACzB,EAAKJ,OAAOK,eAAgB,EAG5B,EAAKC,gBAAkB,EAAKN,OAAOO,SACnC,EAAKC,gBAAkB,EAAKR,OAAOS,SACnC,EAAKC,aAAe,EAAKV,OAAOW,MAEhC,EAAKD,aAAaE,IAAI,GAAI,GAAI,IAG9BlB,EAAMQ,IAAI,EAAKF,eAChBa,GAAW,SAAWC,GACrBC,QAAQD,MAAMA,Q,qBAItB,WACI,OAAOnB,KAAKK,W,aCpCdgB,E,MAAgBC,GAAGhB,GAEdiB,EAAc,CACrBC,gBAAgB,EAChBC,WAAW,EACXC,YAAY,EACZC,YAAa,GACbC,YAAY,GAkCDC,E,WA9BX,aAAe,oBAGX7B,KAAK8B,OAAS,IAAIxB,oBAAwB,GAAIyB,OAAOC,WAAWD,OAAOE,YAAa,IAAM,KAC1FjC,KAAK8B,OAAOlB,SAASK,IAAI,EAAG,IAAK,IACjCjB,KAAK8B,OAAOI,OAAO,IAAI5B,UAAc,EAAG,EAAG,IAC3CN,KAAK8B,OAAOtB,eAAgB,EAE5BR,KAAKmC,SAAW,IAAId,EAAcrB,KAAK8B,Q,0CAG3C,WACI9B,KAAKoC,mB,4BAGT,WACIpC,KAAKmC,SAASE,SACdrC,KAAKmC,SAASG,UAAYf,EAAYE,UACtCzB,KAAKmC,SAASI,WAAahB,EAAYG,WACvC1B,KAAKmC,SAASK,gBAAkBjB,EAAYI,YAC5C3B,KAAKmC,SAASM,QAAUlB,EAAYC,eACpCxB,KAAKmC,SAASO,WAAanB,EAAYK,a,uBAG3C,WACI,OAAO5B,KAAK8B,W,KCvBLa,EAbX,WAAY5C,GAAQ,oBAMhB,IAAI6C,EAAmB,IAAItC,mBAAuB,UAClDsC,EAAiBC,UAAY,EAC7BD,EAAiBhC,SAASK,IAAI,EAAG,IAAK,GAAG6B,YACzC/C,EAAMQ,IAAIqC,ICYHG,E,WArBX,aAAe,oBAEX/C,KAAKgD,SAAW,IAAI1C,gBAAoB,CACpC2C,WAAW,IAEfjD,KAAKgD,SAASE,cAAc,OAAU,GACtClD,KAAKgD,SAASG,QAAQpB,OAAOC,WAAYD,OAAOE,aAChDjC,KAAKgD,SAASI,cAAcrB,OAAOsB,kBACnCrD,KAAKgD,SAASM,eAAiBhD,e,iDAGnC,WACI,OAAON,KAAKgD,SAASO,a,oBAGzB,SAAOxD,EAAO+B,GACV9B,KAAKgD,SAASQ,OAAOzD,EAAO+B,O,KCL9B2B,E,WACF,WAAYC,GAAa,oBACrB1D,KAAK2D,UAAY,EACjB3D,KAAK4D,IAAMF,EAAWE,IACtB5D,KAAK6D,YAAcH,EAAWI,IAC9B9D,KAAK+D,UAAYL,EAAWM,IAC5BhE,KAAKiE,WAAaP,EAAWQ,KAC7BlE,KAAKmE,UAAY,IAAI7D,UAAc,EAAG,EAAG,G,+CAG7C,SAAY8D,GAERpE,KAAK2D,UAAY3D,KAAK6D,YAClB7D,KAAK2D,UAAY3D,KAAKiE,WACtBjE,KAAK2D,UAAY3D,KAAKiE,WAG1BjE,KAAK2D,UAAY3D,KAAK2D,WAAaS,EAAW,EAAIpE,KAAK2D,Y,wBAG3D,SAAWU,GACP,OAAOrE,KAAK+D,UAAUO,EAAID,EAAIE,KAAKC,IAAIxE,KAAK2D,a,wBAGhD,SAAWU,GACP,OAAOrE,KAAK+D,UAAUU,EAAIJ,EAAIE,KAAKG,IAAI1E,KAAK2D,a,wBAGhD,SAAWU,GACP,OAAOrE,KAAK+D,UAAUY,EAAI3E,KAAK4D,IAAMW,KAAKG,IAAI1E,KAAK2D,a,0BAGvD,WACI,OAAO3D,KAAKmE,Y,4BAKhB,gB,KAgBSS,EAAb,kDACI,WAAYlB,GAAa,IAAD,8BACpB,cAAMA,IACDmB,KAAOnB,EAAWoB,KACvB,EAAKC,KAAOrB,EAAWsB,KACvB,EAAKZ,SAAW,EAAEG,KAAKU,GAJH,EAD5B,0CAQI,WAII,IAAIC,EAAOlF,KAAKmF,WAAWnF,KAAK6E,MAC5BO,EAAOpF,KAAKqF,WAAWrF,KAAK+E,MAC5BO,EAAOtF,KAAKuF,aAChBvF,KAAKmE,UAAUlD,IAAIiE,EAAMI,EAAMF,GAE/BpF,KAAKwF,YAAYxF,KAAKoE,YAjB9B,0BAoBI,SAAaqB,GACTzF,KAAK+D,UAAU9C,IAAIwE,EAAcC,WAAYD,EAAcE,WAAYF,EAAcG,YACrF5F,KAAK6E,KAAOY,EAAcI,QAC1B7F,KAAK+E,KAAOU,EAAcK,QAC1B9F,KAAK4D,IAAM6B,EAAcM,UACzB/F,KAAKiE,WAAa3D,OAAW0F,SAASP,EAAcQ,OACpDjG,KAAK6D,YAAc4B,EAAc5B,gBA1BzC,GAAoCJ,G,gBC3DvByC,EAAb,WACI,WAAYC,EAAQC,GAAW,oBAC3B,IAAIC,EAAM,IAAIC,IAAQ,EAAG,EAAG,GACxBC,EAAM,IAAID,IAAQ,EAAG,EAAG,GAE5BD,EAAI/B,EAAI6B,EAAO7B,EAAI8B,EACnBC,EAAI1B,EAAIwB,EAAOxB,EAAIyB,EACnBC,EAAI5B,EAAI0B,EAAO1B,EAAI2B,EAEnBG,EAAIjC,EAAI6B,EAAO7B,EAAI8B,EACnBG,EAAI5B,EAAIwB,EAAOxB,EAAIyB,EACnBG,EAAI9B,EAAI0B,EAAO1B,EAAI2B,EAEnBpG,KAAKwG,KAAO,IAAIC,IAAYJ,EAAKE,EAf5B,EACM,GACnB,+CAiBI,SAAY3F,EAAU8F,GAClB1G,KAAKwG,KAAKG,OAAO/F,EAAU8F,KAlBnC,2BAsBI,SAAc9F,EAAUgG,GACpB,OAAO5G,KAAKwG,KAAKK,WAAWjG,EAAUgG,GAAQ,KAvBtD,wBA0BI,WACI,OAAO5G,KAAKwG,KAAKM,eA3BzB,KAiCaC,EAAb,WACI,aAAe,oBACX/G,KAAKgH,YAAc,GAF3B,0CAKI,SAAOC,EAAaC,GAChBlH,KAAKmH,YAAYF,EAAaC,KANtC,yBASI,SAAYD,EAAaC,GAAY,IAAD,OAChClH,KAAKgH,YAAc,IAAId,EAAOe,EAZT,IAarBC,EAAUE,SAAQ,SAAAC,GACd,EAAKL,YAAYM,YAAYD,EAAEzG,SAAUyG,QAZrD,2BAiBI,SAAclB,GACV,IAAoBoB,EAAQ,GAM5B,OALavH,KAAKgH,YAAYQ,cAAcrB,EApB3B,GAqBNiB,SAAQ,SAAAK,GACf,IAAIC,EAAID,EAAC,KACTF,EAAQI,KAAKD,MAEVH,MAxBf,KCjCMK,EAAe,SAACC,EAAQC,EAAQC,EAAQC,EAAeC,GACzD,IAAIC,EAAO3D,KAAK4D,KAAKN,EAASA,EAASC,EAASA,EAASC,EAASA,GAClEF,GAAUK,EACVJ,GAAUI,EACVH,GAAUG,EACV,IAAI1D,EAAMD,KAAKC,IAAIwD,EAAgB,GAC/BtD,EAAMH,KAAKG,IAAIsD,EAAgB,GACnCC,EAAEhH,IAAI4G,EAASnD,EAAKoD,EAASpD,EAAKqD,EAASrD,EAAKF,ICpBzC4D,EAAc,CACrBC,SAAU,IACVC,aAAc,IACdC,gBAAiB,IACjBC,cAAe,GACfC,eAAgB,IAGCC,E,WACjB,aAAe,oBAGX1I,KAAKY,SAAW,IAAIN,UAA8B,GAAhBiE,KAAKoE,SAAe,EAAG,GACzD3I,KAAK4I,SAAW,IAAItI,UAAc,GAAK,GAAK,IAC5CN,KAAK6I,aAAe,IAAIvI,UAAc,EAAG,EAAG,GAC5CN,KAAK8I,UAAY,IAAIxI,aACrBN,KAAK+I,UAAY,IAAIzI,aACrBN,KAAKgJ,OAAS,IAAI1I,UAAc,EAAG,EAAG,GACtCN,KAAKiJ,SAAW,IAAI3I,UAAc,EAAG,EAAG,GAGxCN,KAAKkJ,OAAS,IAAI5I,UAAc,EAAG,EAAG,GACtCN,KAAKmJ,QAAU,IAAI7I,UAAc,EAAG,EAAG,GAGvCN,KAAKoJ,SAAWpJ,KAAKqJ,mBAAmB,KAAO,KAC/CrJ,KAAKsJ,iBAAmB,EAGxBtJ,KAAKuJ,kBAAoB,GAAM,GAC/BvJ,KAAKwJ,gBAAkB,KAGvBxJ,KAAKyJ,OAAS,IAAInJ,UAAc,EAAG,EAAG,G,+CAG1C,SAAYiH,GACRvH,KAAK0J,aACL1J,KAAK2J,MAAMpC,GACXvH,KAAK4J,mB,wBAGT,WACI5J,KAAK6J,OACL7J,KAAK8J,e,mBAGT,SAAMvC,GACEA,EAAQwC,OAAS,IACjB/J,KAAKgK,WAAWzC,GAChBvH,KAAK8J,aAEL9J,KAAKiK,SAAS1C,GACdvH,KAAK8J,aAEL9J,KAAKkK,MAAM3C,GACXvH,KAAK8J,gB,4BAIb,WAEI9J,KAAKkJ,OAAOiB,WAAWnK,KAAK4I,SAAU5I,KAAK6I,cAI3C7I,KAAK4I,SAAW5I,KAAK4I,SAASwB,KAAKpK,KAAKkJ,OAAQd,EAAYE,cAC5DtI,KAAK4I,SAASyB,aAAa,KAAMrK,KAAKoJ,UAEtCpJ,KAAKY,SAASL,IAAIP,KAAK4I,UACvB5I,KAAK6I,aAAayB,eAAe,K,wBAGrC,WAEItK,KAAK6I,aAAatI,IAAIP,KAAKgJ,U,kBAG/B,WAEIhJ,KAAKiJ,SAASsB,WAAWvK,KAAKyJ,OAAQzJ,KAAKY,UAC3CZ,KAAKiJ,SAASnG,YAEd,IDlFW0H,EAAOC,EAAMC,EAAOC,EAAMC,ECkFjCC,EAAI7K,KAAKiJ,SAAS6B,WACtB,GAAID,EAAI7K,KAAKuJ,mBAAqBsB,EAAI7K,KAAKwJ,gBAAiB,CACxD,IAAIuB,GDpFGP,ECoF6BK,EDpFtBJ,ECoFyBzK,KAAKuJ,kBDpFxBmB,ECoF2C1K,KAAKwJ,gBDpFzCmB,ECoF0D3K,KAAKoJ,SDpFzDwB,ECoFmE5K,KAAKsJ,iBDnF1GqB,GAAQC,EAAQD,IAASH,EAAQC,IAASC,EAAQD,ICoFjDzK,KAAKiJ,SAASqB,eAAeS,QAE7B/K,KAAKiJ,SAASqB,eAAetK,KAAKoJ,UAItCpJ,KAAKgJ,OAAOuB,WAAWvK,KAAKiJ,SAAUjJ,KAAK4I,UAC3C5I,KAAKgJ,OAAOqB,aAAa,MAAOjC,EAAYC,Y,wBAGhD,SAAWd,GAAU,IAAD,OAChBvH,KAAKgJ,OAAO/H,IAAI,EAAG,EAAG,GACtBjB,KAAKkJ,OAAOjI,IAAI,EAAG,EAAG,GAElBsG,EAAQwC,OAAS,IACjBxC,EAAQH,SAAQ,SAAAK,GACZ,EAAK0B,QAAQoB,WAAW,EAAK3J,SAAU6G,EAAE7G,UACzC,EAAKuI,QAAQrG,YACb,EAAKqG,QAAQ6B,aAAa,EAAK7B,QAAQY,UACvC,EAAKb,OAAO3I,IAAI,EAAK4I,YAIzBnJ,KAAKkJ,OAAO8B,aAAazD,EAAQwC,QAC7B/J,KAAKkJ,OAAO4B,WAAa,IACzB9K,KAAKkJ,OAAOpG,YACZ9C,KAAKkJ,OAAOmB,aAAa,MAAOrK,KAAKoJ,UACrCpJ,KAAKgJ,OAAOuB,WAAWvK,KAAKkJ,OAAQlJ,KAAK4I,UACzC5I,KAAKgJ,OAAOqB,aAAa,MAAOjC,EAAYC,UAC5CrI,KAAKgJ,OAAOsB,eAAelC,EAAYG,qB,sBAKnD,SAAShB,GAAU,IAAD,OACdvH,KAAKyJ,OAAOxI,IAAI,EAAG,EAAG,GACtBjB,KAAKgJ,OAAO/H,IAAI,EAAG,EAAG,GAElBsG,EAAQwC,OAAS,IACjBxC,EAAQH,SAAQ,SAAAK,GACZ,EAAKgC,OAAOlJ,IAAIkH,EAAE7G,aAGtBZ,KAAKyJ,OAAOuB,aAAazD,EAAQwC,QACjC/J,KAAK6J,OACL7J,KAAKgJ,OAAOsB,eAAelC,EAAYI,kB,mBAI/C,SAAMjB,GAAU,IAAD,OACXvH,KAAKgJ,OAAO/H,IAAI,EAAG,EAAG,GAElBsG,EAAQwC,OAAS,IACjBxC,EAAQH,SAAQ,SAAAM,GACZ,EAAKsB,OAAOzI,IAAImH,EAAEkB,aAGtB5I,KAAKgJ,OAAOgC,aAAazD,EAAQwC,QACjC/J,KAAKgJ,OAAOlG,YACZ9C,KAAKgJ,OAAOsB,eAAetK,KAAKoJ,UAChCpJ,KAAKgJ,OAAOiC,IAAIjL,KAAK4I,UACrB5I,KAAKgJ,OAAOqB,aAAa,MAAOjC,EAAYC,UAC5CrI,KAAKgJ,OAAOsB,eAAelC,EAAYK,mB,uBAI/C,SAAUtE,GACNnE,KAAKyJ,OAAOyB,KAAK/G,K,gCAGrB,SAAmBkC,EAAKE,GACrB,OAAOhC,KAAKoE,UAAYpC,EAAMF,GAAOA,M,sBClJtCzG,EAAS,IAAIC,IAEEsL,E,kDACjB,WAAYpL,GAAQ,IAAD,8BACf,gBACKqL,WAAWrL,GAFD,E,8CAKnB,SAAWA,GAAQ,IAAD,OACdH,EAAOM,KAAKmL,KAAO,SAAAjL,GACf,EAAKkL,OAASlL,EAAKL,MAGnB,EAAKM,OAAS,IAAIC,QAClB,EAAKD,OAAOE,IAAI,EAAK+K,QACrB,EAAKjL,OAAOG,eAAgB,EAC5B,EAAKH,OAAOI,YAAa,EACzB,EAAKJ,OAAOK,eAAgB,EAG5B,EAAK6K,cAAgB,EAAKlL,OAAOO,SACjC,EAAK4K,cAAgB,EAAKnL,OAAOS,SACjC,EAAK2K,WAAa,EAAKpL,OAAOW,MAC9B,EAAK0K,gBAAkBtL,EAAKuL,WAE5B,EAAKF,WAAWxK,IAAI,GAAM,GAAM,IAGhC,EAAK2K,eAAiB,IAAItL,iBAAqB,EAAKD,QACvC,EAAKuL,eAAeC,WAAW,EAAKH,gBAAgB,IAC1DI,OAGP/L,EAAMQ,IAAI,EAAKF,eAChBa,GAAW,SAAWC,GACrBC,QAAQD,MAAMA,Q,oBAItB,SAAO4K,EAAOxE,GAENvH,KAAK4L,iBACL5L,KAAK4L,eAAevJ,OAAO0J,GAG3B/L,KAAKgM,YAAYzE,GAGjBvH,KAAKiM,eACLjM,KAAKkM,kB,0BAIb,WAGIlM,KAAKK,OAAOO,SAASsK,KAAKlL,KAAKY,Y,0BAGnC,WAEI,IAAIuL,EAASC,EFnEJC,IEoEiBrM,KAAK4I,SAA/BuD,EFnEG5H,KAAK+H,MAAMD,EAAE/H,EAAG+H,EAAE5H,GEoErB2H,EFjEY,SAACC,GACjB,OAAO9H,KAAKgI,KAAKF,EAAE1H,EAAI0H,EAAEtC,UEgEPyC,CAAoBxM,KAAK4I,UAEvC4D,EAAqB,EAAG,EAAG,EAAGL,EAASnM,KAAK8I,WAC5C0D,EAAqB,EAAG,EAAG,EAAGJ,EAAc7H,KAAKU,GAAG,EAAGjF,KAAK+I,WAE5D/I,KAAK8I,UAAU2D,SAASzM,KAAK+I,WAC7B/I,KAAKK,OAAOqM,0BAA0B1M,KAAK8I,e,GAnEfJ,GCdfiE,E,WACjB,WAAY5M,GAAQ,oBAChB,IAAI6M,EAAW,IAAItM,iBAAqB,GAAK,GAAI,IAC7CuM,EAAW,IAAIvM,sBAA0B,CAACwM,MAAO,IAAIxM,QAAY,EAAG,EAAG,GAAIyM,WAAW,IAC1F/M,KAAKgN,KAAO,IAAI1M,OAAWsM,EAAUC,GAErC9M,EAAMQ,IAAIP,KAAKgN,M,6CAGnB,WACI,OAAOhN,KAAKgN,KAAKpM,W,uBAGrB,SAAUyL,GACNrM,KAAKgN,KAAKpM,SAASsK,KAAKmB,K,2BAG5B,SAAcA,GACVrM,KAAKgN,KAAKC,QAAUZ,M,KCJjBa,EAAe,CACtBC,YAAY,GAsEDC,E,WAlEX,WAAYrN,GAAQ,oBAEhBC,KAAKqN,cAAgB,IAAItG,EAGzB/G,KAAKsN,QAAU,GAGftN,KAAKuN,MAAQ,IAAIjN,QAEjBN,KAAKwN,qB,yCAGT,SAAMzN,GAEF,IAAK,IAAI0N,EAAI,EAAGA,EAtBJ,GAsBqBA,IAAK,CAClC,IAAIC,EAAI,IAAIvC,EAAOpL,GACnBC,KAAKsN,QAAQ3F,KAAK+F,GAItB1N,KAAKyJ,OAAS,IAAIkD,EAAO5M,K,gCAG7B,WACI,IAMI2D,ENYsB,SAACK,EAAWc,EAAME,EAAMgB,EAAWlC,EAAaI,GAC9E,MAAO,CACHD,IAAKD,EACLe,KAAMD,EACNG,KAAMD,EACNnB,IAAKmC,EACLjC,IAAKD,EACLK,KAAMD,GMnBW0J,CANP,IAAIrN,UAAc,EAAG,EAAG,GACvB,GACA,GACD,GACA,EACOA,OAAW0F,SAAS,KAErChG,KAAK4N,eAAiB,IAAIhJ,EAAelB,K,oBAG7C,WAAU,IAAD,OAEL,GAAI1D,KAAKsN,QAAQvD,OAAS,EAAG,CAEzB/J,KAAK4N,eAAevL,SACpB,IAAIwL,EAAa7N,KAAK4N,eAAeE,eAGjC/B,EAAQ/L,KAAKuN,MAAMQ,WAKvB/N,KAAKqN,cAAchL,OAAOwL,EAAY7N,KAAKsN,SAE3C,IAAI/F,EAAU,GACdvH,KAAKsN,QAAQlG,SAAQ,SAAAsG,GAEjBA,EAAEM,UAAUH,GAEZtG,EAAU,EAAK8F,cAAcY,cAAcP,EAAE9M,UAC7C8M,EAAErL,OAAO0J,EAAOxE,MAIpBvH,KAAKyJ,OAAOyE,UAAUL,GACtB7N,KAAKyJ,OAAO0E,cAAcjB,EAAaC,iB,uDCdpC,M,WArDb,aAAe,oBACXnN,KAAKoO,QAAUC,+CAEfrO,KAAKsO,OAASC,IAAGvO,KAAKoO,QAAS,CAC3BI,cAAc,EACdC,kBAAmB,IACnBC,qBAAsBC,MAG1B3O,KAAKsO,OAAOM,KAAK,UAAW5O,KAAK6O,UAAUC,KAAK9O,OAChDA,KAAK+O,iBAAmB,G,6CAG5B,WACI3N,QAAQ4N,IAAI,aAGZhP,KAAKsO,OAAOW,GAAG,OAAQjP,KAAKkP,QAAQJ,KAAK9O,OACzCA,KAAKsO,OAAOW,GAAG,iBAAkBjP,KAAKmP,cAAcL,KAAK9O,S,2BAG7D,SAAcoP,GACZpP,KAAK+O,iBAAiBK,K,2BAIxB,SAAcC,EAAYC,GACtB,IAAIC,EAAU,CACV,KAASF,EACT,KAAQC,GAEZtP,KAAKsO,OAAOkB,KAAK,aAAcD,K,4BAGnC,SAAeE,GACbzP,KAAKsO,OAAOkB,KAAK,cACjBxP,KAAK+O,iBAAmBU,I,0BAG1B,SAAaJ,GACXrP,KAAKsO,OAAOkB,KAAK,eAAgBH,K,wBAInC,WACIjO,QAAQ4N,IAAI,iC,qBAGhB,SAAQI,Q,MCzCNM,EAAY,CACZC,OAAQ,SACRC,QAAS,IAuKEC,E,WAlKX,WAAYC,GAAqB,oBAC7B9P,KAAK+P,IAAM,IAAIC,OAAK,CAACC,MAAO,aAAcC,UAAWJ,EAAoBK,UAAU,IACnFnQ,KAAK+P,IAAIK,eAAeC,GAGxBrQ,KAAK+P,IAAIO,SAASZ,EAAW,UAG7B1P,KAAKuQ,cAAgB,GACrBvQ,KAAKwQ,eAGLxQ,KAAKyQ,SAAWzQ,KAAK+P,IAAIW,SAAS,CAC9BC,KAAM,WACNC,MAAO,MACPC,UAAW,IAIf,IAAIC,EAAK9Q,KAAK+P,IAAIgB,UAAU,CAAEd,MAAO,iBAAkBE,UAAU,IACjEW,EAAGR,SAAS/O,EAAa,iBAAkB,CAACqP,MAAO,oBACnDE,EAAGR,SAAS/O,EAAa,YAAa,CAACqP,MAAO,mBAC9CE,EAAGR,SAAS/O,EAAa,aAAc,CAACqP,MAAO,sBAC/CE,EAAGR,SAAS/O,EAAa,cAAe,CAAEqP,MAAO,iBAAkBvK,IAAK,GAAKE,IAAK,IAClFuK,EAAGR,SAAS/O,EAAa,aAAc,CAACqP,MAAO,gBAGtC5Q,KAAK+P,IAAIgB,UAAU,CAAEd,MAAO,gBAAiBE,UAAU,IAC7DG,SAASpD,EAAc,aAAc,CAAC0D,MAAO,gBAEhD,IAAII,EAAKhR,KAAK+P,IAAIgB,UAAU,CAAEd,MAAO,eAAgBE,UAAU,IAC/Da,EAAGV,SAASlI,EAAa,WAAY,CAACwI,MAAO,YAAavK,IAAK,KAAOE,IAAK,EAAG0K,KAAM,OACpFD,EAAGV,SAASlI,EAAa,eAAgB,CAACwI,MAAO,gBAAiBvK,IAAK,KAAOE,IAAK,GAAK0K,KAAM,OAC9FD,EAAGV,SAASlI,EAAa,kBAAmB,CAACwI,MAAO,mBAAoBvK,IAAK,GAAKE,IAAK,EAAG0K,KAAM,KAChGD,EAAGV,SAASlI,EAAa,gBAAiB,CAACwI,MAAO,iBAAkBvK,IAAK,GAAKE,IAAK,EAAG0K,KAAM,KAC5FD,EAAGV,SAASlI,EAAa,iBAAkB,CAACwI,MAAO,kBAAmBvK,IAAK,EAAGE,IAAK,EAAG0K,KAAM,KAG5FjR,KAAK+P,IAAImB,UAAU,CAACjB,MAAO,gBAAgBhB,GAAG,QAASjP,KAAKmR,aAAarC,KAAK9O,OAC9EA,KAAK+P,IAAImB,UAAU,CAACjB,MAAO,kBAAkBhB,GAAG,QAASjP,KAAKoR,eAAetC,KAAK9O,OAClFA,KAAK+P,IAAImB,UAAU,CAACjB,MAAO,eAAehB,GAAG,QAASjP,KAAKqR,YAAYvC,KAAK9O,OAG5EsR,EAAUC,eAAevR,KAAKwR,iBAAiB1C,KAAK9O,O,oDAGxD,SAAiByR,GAEb,IAAIC,EAAUC,KAAKC,MAAMH,EAAMjH,OAC/BxK,KAAK+P,IAAI8B,aAAaH,K,8BAG1B,SAAiBtC,GAAO,IAAD,OAKnB,GAJAhO,QAAQ4N,IAAI,6BACZ5N,QAAQ4N,IAAII,GAGRA,EAAKrF,OAAS,EAAG,CAEjBqF,EAAKhI,SAAQ,SAAAyD,GACT,IAAIiH,EAAOjH,EAAC,KACRkH,EAASlH,EAAC,OAGd,EAAK0F,cAAc5I,KAAK,CAAEqK,KAAMF,EAAMtH,MAAOmH,KAAKM,UAAUF,QAIhE,IAAIG,EAAoB9C,EAAK,GAAL,OACxBpP,KAAK+P,IAAI8B,aAAaK,GAGtBlS,KAAKmS,iBACLnS,KAAKwQ,kB,0BAIb,WACI,IAAInB,EAAaK,EAAUC,OAC3B,GAAIN,EAAWtF,OAAS,EAAG,CAEvB/J,KAAKmS,iBACL,IAAI7C,EAAOtP,KAAK+P,IAAIqC,eAGhBC,EAASC,IAAEC,KAAKvS,KAAKuQ,eAAe,SAAA7C,GACpC,OAAOA,EAAEsE,OAAS3C,KAGlBgD,GAEAjR,QAAQ4N,IAAI,kEACZqD,EAAO7H,MAAQmH,KAAKM,UAAU3C,GAI9BtP,KAAKuQ,cAAgB+B,IAAEE,OAAOxS,KAAKuQ,eAAe,YAC9C,OAD0D,EAAVyB,OAChC3C,EAAa,EAAG,OAGpCjO,QAAQ4N,IAAI,mDACZhP,KAAKuQ,cAAckC,QAAQ,CAAET,KAAM3C,EAAY7E,MAAOmH,KAAKM,UAAU3C,MAIzEgC,EAAUoB,cAAcrD,EAAYC,GAGpCtP,KAAKwQ,oBAELmC,MAAM,gC,4BAId,WACI,GAAI3S,KAAKuQ,cAAcxG,OAAS,EAAG,CAC/B,IAAIsF,EAAaK,EAAUC,OAe3B,GAdAvO,QAAQ4N,IAAI,oBAAsBK,GAIlCiD,IAAEM,OAAO5S,KAAKuQ,eAAe,SAAA7C,GAAC,OAAIA,EAAEsE,OAAS3C,KAG7CiC,EAAUuB,aAAaxD,GAGvBrP,KAAKmS,iBACLnS,KAAKwQ,eAGDxQ,KAAKuQ,cAAcxG,OAAS,EAAG,CAE/B,IAAI+I,EAAa9S,KAAKuQ,cAAc,GAAG/F,MACvCxK,KAAK+P,IAAI8B,aAAaF,KAAKC,MAAMkB,Q,4BAK7C,WACIpD,EAAUE,QAAU,GACpB5P,KAAK+S,WAAWC,Y,0BAGpB,WACIhT,KAAK+S,WAAa/S,KAAK+P,IAAIO,SAASZ,EAAW,UAAW,CACtDuD,MArJQ,EAsJRC,QAASlT,KAAKuQ,gBAElBvQ,KAAK+S,WAAW9D,GAAG,SAAUjP,KAAKmT,iBAAiBrE,KAAK9O,S,gCAG5D,SAAmBoT,GACfpT,KAAKqR,YAAc+B,I,yBAGvB,WACIpT,KAAKqR,kB,KC9KPgC,EAAS,CACXnD,UAAW,CACPtP,SAAU,WACV0S,IAAK,QACLC,MAAO,SAITC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAM,GAGX,EAAKC,OAASC,IAAMC,YALH,E,0CAQnB,WACE,OACE,yBAAKC,IAAK9T,KAAK2T,OAAQI,MAAOV,EAAOnD,c,+BAIzC,WACE,IAAIJ,EAAqB9P,KAAK2T,OAAOK,QACrChU,KAAK+P,IAAM,IAAIF,EAAUC,GACzB9P,KAAK+P,IAAIkE,mBAAmBjU,KAAKqR,YAAYvC,KAAK9O,S,yBAGpD,WACI,OAAOA,KAAK+P,IAAIU,W,yBAGpB,WACEzQ,KAAKyT,MAAMS,sB,GA1BQN,IAAMO,WA8BdC,cAAOZ,GClDhB1G,EACK,UADLA,EAKK,UAGLuH,GAOO,OAPPA,GAYO,OAcPC,GAOQ,OAPRA,GAQS,OAoBTC,GACG,eADHA,GAMM,gBCtDNlB,GAAS,CACXnD,UAAW,CACPtP,SAAU,WACV0S,IAAK,KACLkB,MAAO,QACPC,OAAQ,QACRC,gBDlBW,oBCmBXC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,GAGZC,KAAM,CACFC,WAAY,UAGhBhF,MAAO,CACHsE,WAAYA,GACZF,SDZU,OCaVa,cAAe,EACfC,QAAS,EACTrI,MAAOA,GAGXsI,QAAS,CACLb,WAAYA,GACZF,SAAUA,GACVvH,MAAOA,GAGXuI,OAAQ,CACJd,WAAYA,GACZzH,MAAOA,EACPuH,SAAUA,GACViB,YAAa,QACbC,YAAa,MACbjB,QDfO,MCgBPkB,YAAalB,GACbmB,aAAcnB,GACdoB,OAAQ,YAMVC,G,kDACJ,WAAYlC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAM,CACPkC,UAAU,EACVC,WAAW,GAJE,E,0CAQnB,WACE,IAAIC,EAAiB9V,KAAK0T,MAAMkC,SAAW,CAACvC,GAAOnD,UAAWmD,GAAO2B,MAAQ3B,GAAOnD,UAChF6F,EAAU/V,KAAK0T,MAAMmC,UAAY7V,KAAKgW,YAAchW,KAAKiW,WAC7D,OACE,yBAAKlC,MAAO+B,GACPC,K,uBAKT,WACE,OAAQ,yBAAKhC,MAAOV,GAAO+B,SAAnB,iB,sBAGV,WACE,OACI,kBAAC,IAAMc,SAAP,KACI,yBAAKnC,MAAOV,GAAOpD,OAAnB,YACA,yBAAKkG,QAASnW,KAAKoW,QAAQtH,KAAK9O,MAAO+T,MAAOV,GAAOgC,QAArD,Y,qBAKV,WACErV,KAAKqW,SAAS,CACVR,WAAW,IAKf7V,KAAKyT,MAAM6C,eAIXC,WAAWvW,KAAKwW,mBAAmB1H,KAAK9O,MA7C1B,O,gCAgDhB,WACEA,KAAKqW,SAAS,CACVT,UAAU,IAId5V,KAAKyT,MAAMgD,qB,GApDU7C,IAAMO,WAwDhBC,eAAOuB,ICzGhBe,GAAY,CACdC,QAASvC,IAAOwC,UAAU,CACxB,KAAM,CACJtD,IAAK,UAEP,MAAO,CACLA,IAAK,SAEP,OAAQ,CACNA,IAAK,SAITuD,SAAUzC,IAAOwC,UAAU,CACzB,KAAM,CACJtD,IAAK,KAEP,MAAO,CACLA,IAAK,SAEP,OAAQ,CACNA,IAAK,aAKPD,GAAS,CACXnD,UAAW,CACPtP,SAAU,WACV4T,MAAO,OACPlB,IAAK,UAGTyC,QAAS,CACLpB,QAAS,OACTC,cAAe,MACfE,eAAgB,gBAChBR,QAASA,GACTwC,UAAW,UAGfC,UAAW,CACPL,UAAW,yBACXM,cAAeN,GAAUC,SAG7BM,WAAY,CACRP,UAAW,yBACXM,cAAeN,GAAUG,UAG7B5G,MAAO,CACHsE,WAAYA,GACZF,SAAUA,GACVa,cAAe,EACfC,QAAS,EACTrI,MAAOA,EACP4I,OAAQ,WAGZwB,MAAO,CACH3C,WAAYA,GACZzH,MAAOA,EACPuH,SAAUA,GACVqB,OAAQ,YAIZyB,GACM,EADNA,GAEM,EAFNA,GAGM,EAGJC,G,kDACJ,WAAY3D,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAM,CACP2D,SAAUF,IAHG,E,0CAOnB,WACE,IAAIrB,EAAiB9V,KAAK0T,MAAM2D,WAAaF,GAAuB,CAAC9D,GAAOnD,UAAWmD,GAAO0D,WAC1F/W,KAAK0T,MAAM2D,WAAaF,GAAuB,CAAC9D,GAAOnD,UAAWmD,GAAO4D,YAAc5D,GAAOnD,UAClG,OACE,yBAAK6D,MAAO+B,GACR,yBAAK/B,MAAOV,GAAO0C,SACjB,yBAAKhC,MAAOV,GAAOpD,OAAnB,YACA,yBAAK8D,MAAOV,GAAOpD,OAAnB,a,yBAMV,WACMjQ,KAAK0T,MAAM2D,WAAaF,GACxBnX,KAAKqW,SAAS,CACVgB,SAAUF,KAEPnX,KAAK0T,MAAM2D,WAAaF,GAC/BnX,KAAKqW,SAAS,CACVgB,SAAUF,KAEPnX,KAAK0T,MAAM2D,WAAaF,IAC/BnX,KAAKqW,SAAS,CACVgB,SAAUF,S,GAhCFvD,IAAMO,WAsCXC,eAAOgD,IChHhBV,GAAY,CACdY,QAASlD,IAAOwC,UAAU,CACxB,KAAM,CACJW,KAAM,UAER,MAAO,CACLA,KAAM,UAER,OAAQ,CACNA,KAAM,SAIVC,SAAUpD,IAAOwC,UAAU,CACzB,KAAM,CACJW,KAAM,OAER,MAAO,CACLA,KAAM,UAER,OAAQ,CACNA,KAAM,aAKRlE,GAAS,CACXnD,UAAW,CACPtP,SAAU,WACV0S,IAAK,KACLkB,MAAO,QACPC,OAAQ,OACR8C,KAAM,SACN7C,gBAAiB5H,GAGrBiJ,QAAS,CACLpB,QAAS,OACTC,cAAe,MACfE,eAAgB,gBAChBR,QAASA,GACTwC,UAAW,UAGfC,UAAW,CACPL,UAAW,yBACXM,cAAeN,GAAUY,SAG7BL,WAAY,CACRP,UAAW,yBACXM,cAAeN,GAAUc,UAG7BvH,MAAO,CACHsE,WAAYA,GACZF,SAAUA,GACVa,cAAe,EACfC,QAAS,EACTrI,MAAOA,EACP4I,OAAQ,WAGZwB,MAAO,CACH3C,WAAYA,GACZzH,MAAOA,EACPuH,SAAUA,GACVqB,OAAQ,YAIZyB,GACM,EADNA,GAEM,EAFNA,GAGM,EAGJM,G,kDACJ,WAAYhE,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAM,CACP2D,SAAUF,IAHG,E,0CAOnB,WACE,IAAIrB,EAAiB9V,KAAK0T,MAAM2D,WAAaF,GAAuB,CAAC9D,GAAOnD,UAAWmD,GAAO0D,WAC1F/W,KAAK0T,MAAM2D,WAAaF,GAAuB,CAAC9D,GAAOnD,UAAWmD,GAAO4D,YAAc5D,GAAOnD,UAElG,OACE,yBAAK6D,MAAO+B,GACR,yBAAK/B,MAAOV,GAAO0C,a,yBAM3B,WACQ/V,KAAK0T,MAAM2D,WAAaF,GACxBnX,KAAKqW,SAAS,CACVgB,SAAUF,KAEPnX,KAAK0T,MAAM2D,WAAaF,GAC/BnX,KAAKqW,SAAS,CACVgB,SAAUF,KAEPnX,KAAK0T,MAAM2D,WAAaF,IAC/BnX,KAAKqW,SAAS,CACVgB,SAAUF,S,GA/BAvD,IAAMO,WAqCfC,eAAOqD,ICrGhBpE,GAAS,CACbnD,UAAW,CACTsE,MAAO,QACPC,OAAQ,QACRiD,SAAU,WAIRC,G,kDACJ,WAAYlE,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAM,GAGX,EAAKkE,SAAWhE,IAAMC,YACtB,EAAKF,OAASC,IAAMC,YACpB,EAAKgE,SAAWjE,IAAMC,YACtB,EAAKiE,SAAWlE,IAAMC,YAGtB,EAAK9T,MAAQ,IAAIO,QAGjB,EAAKyX,cAAgB,IAAIlW,EAGzB,EAAKmW,gBAAkB,IAAIrV,EAAgB,EAAK5C,OAGhD,EAAKkY,cAAgB,IAAI7K,EAGzB,EAAK8K,gBAAkB,IAAInV,EAvBV,E,qDA0BnB,WAEE,IAAIoV,EAAqBnY,KAAKkY,gBAAgBE,gBAC9CpY,KAAK4X,SAAS5D,QAAQqE,YAAYF,GAGlCnY,KAAKyQ,SAAWzQ,KAAK2T,OAAOK,QAAQsE,cAGpCtY,KAAKG,QAAU,IAAIL,EAAQE,KAAKD,OAGhCC,KAAKuY,qB,oBAIP,WACE,OACE,yBAAKxE,MAAOV,GAAOnD,UAAW4D,IAAK9T,KAAK4X,UACtC,kBAAC,EAAD,CACE9D,IAAK9T,KAAK2T,OACVO,gBAAiBlU,KAAKkU,gBAAgBpF,KAAK9O,QAE7C,kBAAC,GAAD,CACEsW,aAActW,KAAKsW,aAAaxH,KAAK9O,MACrCyW,eAAgBzW,KAAKyW,eAAe3H,KAAK9O,QAE3C,kBAAC,GAAD,CAAO8T,IAAK9T,KAAK6X,WACjB,kBAAC,GAAD,CAAW/D,IAAK9T,KAAK8X,c,8BAK3B,WAEE9X,KAAKyQ,SAAS+H,QACZxY,KAAKiY,cAAc5V,SACnBrC,KAAK+X,cAAc1V,SACnBrC,KAAKkY,gBAAgB1U,OAAOxD,KAAKD,MAAOC,KAAK+X,cAAcU,aAC7DzY,KAAKyQ,SAASiI,MAGdC,sBAAsB3Y,KAAKuY,iBAAiBzJ,KAAK9O,S,0BAGnD,WAEEA,KAAKiY,cAAcW,MAAM5Y,KAAKD,S,4BAGhC,WAIEC,KAAK6X,SAAS7D,QAAQ6E,gB,6BAGxB,WACE7Y,KAAK8X,SAAS9D,QAAQ8E,cACtB9Y,KAAK6X,SAAS7D,QAAQ6E,kB,GAtFNjF,IAAMO,WA0FXC,eAAOuD,IChHhBoB,G,kDACJ,WAAYtF,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAM,GAGX,EAAKkE,SAAWhE,IAAMC,YALL,E,0CAQnB,WACE,OACE,6BACE,kBAAC,GAAD,CAAOC,IAAK9T,KAAK4X,gB,GAZPhE,IAAMO,WAkBTC,eAAO2E,I,SCnBtBC,IAASxV,OAAO,kBAAC,KAAD,KAAW,kBAAC,GAAD,OAAqByV,SAASC,eAAe,U,mBCVxEC,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.e2718c9c.chunk.js","sourcesContent":["/*\n  Author: Amay Kataria\n  Date: 09/16/2021\n  Title: Terrain.js\n  Description: A class responsible to load the static terrain. This the natural landscape that \n  we bring in from Blender. \n*/\n\nimport * as THREE from 'three'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport terrain from '../../models/world.glb'; \n\n\nconst loader = new GLTFLoader(); \n\nexport default class Terrain {\n    constructor(scene) {\n        this.loadTerrain(scene); \n    }\n\n    loadTerrain(scene) {\n        loader.load(terrain, gltf => {\n            this.terrain = gltf.scene; \n            \n            // Agent is the parent object under which pigeon sits. \n            this.parent = new THREE.Group();\n            this.parent.add(this.terrain); \n            this.parent.frustumCulled = false;\n            this.parent.castShadow = true;\n            this.parent.receiveShadow = true; \n\n            // Store all the parameters that we'll be changing for this agent. \n            this.terrainPosition = this.parent.position; \n            this.terrainRotation = this.parent.rotation; \n            this.terrainScale = this.parent.scale\n\n            this.terrainScale.set(50, 50, 50);\n\n            // Add it to the scene. \n            scene.add(this.parent); \n        }, undefined, function ( error ) {\n            console.error(error);\n        }); \n    }\n\n    getMesh() {\n        return this.parent;\n    }\n}\n\n\n","/*\r\n  Name: CameraControl.js\r\n  Author: Amay Kataria\r\n  Date: 09/24/2021\r\n  Description: A module that handles camera and user interaction component.\r\n*/\r\n\r\nimport * as THREE from 'three'\r\nimport oc from 'three-orbit-controls'\r\n\r\nconst OrbitControls = oc(THREE); \r\n\r\nexport let OrbitParams = {\r\n    EnableControls: false,\r\n    EnablePan: true,\r\n    AutoRotate: false,\r\n    RotateSpeed: 0.1, \r\n    EnableKeys: true\r\n};\r\n\r\nclass CameraControl {\r\n    constructor() {\r\n        // Camera Setup\r\n        // (FOV, AspectRatio, Near Clipping, Far Clipping)\r\n        this.camera = new THREE.PerspectiveCamera(60, window.innerWidth/window.innerHeight, 0.05, 20000);\r\n        this.camera.position.set(0, 125, 50); \r\n        this.camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n        this.camera.frustumCulled = true; \r\n\r\n        this.controls = new OrbitControls(this.camera); \r\n    }\r\n\r\n    update() {\r\n        this.updateControls();\r\n    }\r\n\r\n    updateControls() {\r\n        this.controls.update();\r\n        this.controls.enablePan = OrbitParams.EnablePan;\r\n        this.controls.autoRotate = OrbitParams.AutoRotate; \r\n        this.controls.autoRotateSpeed = OrbitParams.RotateSpeed;\r\n        this.controls.enabled = OrbitParams.EnableControls; \r\n        this.controls.enableKeys = OrbitParams.EnableKeys;\r\n    }\r\n\r\n    getCamera() {\r\n        return this.camera;\r\n    }\r\n} \r\n\r\n// Keep a singleton instance of this - through App.js\r\nexport default CameraControl;","/*\r\n  Name: LightingManager.js\r\n  Author: Amay Kataria\r\n  Date: 09/26/2021\r\n  Description: Lighting module to control all the lights in the world. \r\n*/\r\n\r\nimport * as THREE from 'three'\r\n\r\nclass LightingManager {\r\n    constructor(scene) {\r\n        // -------- Lighting ----------------\r\n        // var ambientLight = new THREE.AmbientLight(0xD7D3D3);\r\n        // ambientLight.intensity = 0.5;\r\n        //this.scene.add(ambientLight);\r\n        \r\n        var directionalLight = new THREE.DirectionalLight(0xffffff);\r\n        directionalLight.intensity = 1.0;\r\n        directionalLight.position.set(0, 100, 0).normalize();\r\n        scene.add(directionalLight);\t\r\n    }\r\n} \r\n\r\nexport default LightingManager;","/*\r\n  Name: RendererManager.js\r\n  Author: Amay Kataria\r\n  Date: 09/26/2021\r\n  Description: Core renderer manager. \r\n*/\r\n\r\nimport * as THREE from 'three'\r\n\r\nclass RendererManager {\r\n    constructor() {\r\n        // Core renderer. \r\n        this.renderer = new THREE.WebGLRenderer({\r\n            antialias: true\r\n        }); \r\n        this.renderer.setClearColor(0x0b5213, 1);    // Set renderer properties\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        this.renderer.outputEncoding = THREE.sRGBEncoding; \r\n    }\r\n\r\n    getDomElement() {\r\n        return this.renderer.domElement; \r\n    }\r\n\r\n    render(scene, camera) {\r\n        this.renderer.render(scene, camera);\r\n    }\r\n} \r\n\r\n// Keep a singleton instance of this - through App.js\r\nexport default RendererManager;\r\n","/*\n  Name: PatternManager.js\n  Author: Amay Kataria\n  Date: 09/21/2021\n  Description: A class that holds two different patterns for birds. These are configured using \n  two param objects that are exposed in the GUI. \n*/\n\nimport * as THREE from 'three'\n\nexport let EllipseParams = {\n    originPosX: 0,\n    originPosY: 6, \n    originPosZ: 0,\n    radiusX: 10,\n    radiusZ:  10,\n    amplitude: 0,\n    speed: 0.3, \n    isClockwise: true\n}  \n\nclass Pattern {\n    constructor(patternObj) {\n        this.theta_rad = 0; \n        this.amp = patternObj.amp;  \n        this.isClockwise = patternObj.dir; \n        this.originPos = patternObj.pos; \n        this.moveFactor = patternObj.move; \n        this.targetPos = new THREE.Vector3(0, 0, 0); // Agents follow this target. \n    }\n\n    updateTheta(maxTheta) {\n        // Update theta based on direction. \n        this.theta_rad = this.isClockwise ? \n            this.theta_rad + this.moveFactor : \n            this.theta_rad - this.moveFactor; \n\n        // Reset theta. \n        this.theta_rad = this.theta_rad >= maxTheta ? 0 : this.theta_rad;\n    }\n\n    cartesianX(r) {\n        return this.originPos.x + r * Math.cos(this.theta_rad);\n    }\n\n    cartesianZ(r) {\n        return this.originPos.z + r * Math.sin(this.theta_rad);\n    }\n    \n    cartesianY(r) {\n        return this.originPos.y + this.amp * Math.sin(this.theta_rad);\n    }\n\n    getTargetPos() {\n        return this.targetPos; \n    }\n\n    // Debug Only \n    // To see where we're at. \n    syncPatternObj() {\n        // SparkUtility.syncSceneObject(this.originObj, this.targetPos); \n    }\n}\n\nexport const ellipseConstructor = (originPos, radX, radZ, amplitude, isClockwise, moveFactor) => {\n    return {\n        pos: originPos, // C\n        radx: radX,\n        radz: radZ,\n        amp: amplitude, // C\n        dir: isClockwise, // C\n        move: moveFactor // C\n    }; \n}\n\nexport class EllipsePattern extends Pattern {\n    constructor(patternObj) {\n        super(patternObj); \n        this.radX = patternObj.radx; \n        this.radZ = patternObj.radz; \n        this.maxTheta = 2*Math.PI; \n    }\n\n    update() {\n        //this.setGuiParams(ellipseParams); \n\n        // Ellipse: Cartesian coordinates. \n        let xPos = this.cartesianX(this.radX); // Defines polar curve. \n        let zPos = this.cartesianZ(this.radZ); // Define polar curve. \n        let yPos = this.cartesianY(); // Defines height. \n        this.targetPos.set(xPos, yPos, zPos); \n\n        this.updateTheta(this.maxTheta); \n    }\n\n    setGuiParams(ellipseParams) {\n        this.originPos.set(ellipseParams.originPosX, ellipseParams.originPosY, ellipseParams.originPosZ);\n        this.radX = ellipseParams.radiusX;\n        this.radZ = ellipseParams.radiusZ;\n        this.amp = ellipseParams.amplitude; \n        this.moveFactor = THREE.Math.degToRad(ellipseParams.speed); \n        this.isClockwise = ellipseParams.isClockwise; \n    }   \n}\n\nexport const roseConstructor = (originPos, radius, phase, numPetals, amplitude, isSinusoidal, isClockwise, moveFactor) => {\n    return {\n        pos: originPos, // C\n        rad: radius,\n        ph: phase, \n        numP: numPetals,\n        amp: amplitude, // C\n        isSin: isSinusoidal,\n        dir: isClockwise, // C\n        move: moveFactor // C\n    }\n}\n\n// r = asin(b + cTheta); \n// r = acos(b + cTheta); \n// a = radius\n// b = phase\n// c = numPetals\nexport class RosePattern extends Pattern {\n    constructor(patternObj) {\n        super(patternObj); \n        this.rad = patternObj.rad; \n        this.phase = patternObj.ph; \n        this.numPetals = patternObj.numP;\n        this.isSin = patternObj.isSin; \n        this.maxTheta = Math.PI; \n    }\n\n    update() {\n        let xPos, yPos, zPos; \n        let r = this.isSin ? this.rad * Math.sin(this.phase + this.numPetals * this.theta_rad) : \n            this.rad * Math.cos(this.phase + this.numPetals * this.theta_rad)\n\n        xPos = this.cartesianX(r); // Defines polar curve. \n        zPos = this.cartesianZ(r); // Defines polar curve. \n        yPos = this.cartesianY(); // Defines height. \n\n        this.targetPos.set(xPos, yPos, zPos); \n\n        this.updateTheta(this.maxTheta);\n    }\n}","\r\n/*\r\n  Author: Amay Kataria\r\n  Date: 09/13/2021\r\n  Title: OctreeManager.js\r\n  Description: Octree is a tree data structure where each parent can have uptill 8 children.\r\n  We use this data structure to improve the performance of the flock. Now, every agent doesn't \r\n  have to test against every other agent. This data structure helps keep a list of neighbors for each\r\n  agent. \r\n*/\r\n\r\nimport { Vector3 } from 'math-ds';\r\nimport { PointOctree } from 'sparse-octree'; \r\n\r\nconst BIAS = 0.0; // No loose octree. \r\nconst MAX_POINTS = 2.0; // Maximum points before the tree splits. \r\nexport class Octree {\r\n    constructor(origin, boundary) {\r\n        let min = new Vector3(0, 0, 0);\r\n        let max = new Vector3(0, 0, 0);\r\n\r\n        min.x = origin.x - boundary; \r\n        min.y = origin.y - boundary; \r\n        min.z = origin.z - boundary; \r\n\r\n        max.x = origin.x + boundary; \r\n        max.y = origin.y + boundary; \r\n        max.z = origin.z + boundary;\r\n\r\n        this.tree = new PointOctree(min, max, BIAS, MAX_POINTS); \r\n    }\r\n\r\n    // Insert a point into the octree along with the data that should be retried. \r\n    insertPoint(position, agent) {\r\n        this.tree.insert(position, agent); \r\n    }\r\n\r\n    // Finds all the points in the octree within a given radius. \r\n    scanForPoints(position, radius) {\r\n        return this.tree.findPoints(position, radius, true); \r\n    }\r\n\r\n    pointCount() {\r\n        return this.tree.pointCount; \r\n    } \r\n}\r\n\r\nconst OCTREE_HOOD_BOUNDARY = 20; \r\nconst NEIGHBOUR_RADIUS = 5; // Radius from the origin.\r\nexport class OctreeManager {\r\n    constructor() {\r\n        this.flockOctree = {};\r\n    }\r\n\r\n    update(flockTarget, liarbirds) {\r\n        this.setupOctree(flockTarget, liarbirds); \r\n    }\r\n\r\n    setupOctree(flockTarget, liarbirds) {\r\n        this.flockOctree = new Octree(flockTarget, OCTREE_HOOD_BOUNDARY); \r\n        liarbirds.forEach(l => {\r\n            this.flockOctree.insertPoint(l.position, l); \r\n        }); \r\n    }\r\n\r\n    // Neighbours around a point. \r\n    getNeighbours(origin) {\r\n        let neighbours; let nAgents=[]; \r\n        neighbours = this.flockOctree.scanForPoints(origin, NEIGHBOUR_RADIUS);\r\n        neighbours.forEach(n => {\r\n            let a = n['data']; \r\n            nAgents.push(a); \r\n        }); \r\n        return nAgents; \r\n    }\r\n}\r\n\r\n          ","const getRandomNum = (max = 0, min = 0) => {\n    return Math.floor(Math.random() * (max + 1 - min)) + min;\n}\n\nconst map_range = (value, low1, high1, low2, high2) => {\n    return low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n}\n\nconst azimuth = (v) => {\n    return Math.atan2(v.x, v.z);\n}\n\nconst inclination = (v) => {\n    return Math.acos(v.y / v.length());\n}\n\nconst axisRotation = (axis_x, axis_y, axis_z, angle_radians, q) => {\n    var norm = Math.sqrt(axis_x * axis_x + axis_y * axis_y + axis_z * axis_z);\n    axis_x /= norm;\n    axis_y /= norm;\n    axis_z /= norm;\n    var cos = Math.cos(angle_radians / 2);\n    var sin = Math.sin(angle_radians / 2);\n    q.set(axis_x * sin, axis_y * sin, axis_z * sin, cos); \n}\n\nexport {\n    getRandomNum,\n    map_range,\n    azimuth,\n    inclination,\n    axisRotation\n}","import * as THREE from 'three'\nimport * as Utility from '../Utilities/Utility'\n\nexport let AgentParams = {\n    MaxForce: 0.01,\n    SmoothFactor: 0.01,\n    SeperationForce: 1.2,\n    CohesionForce: 0.5,\n    AlignmentForce: 0.2\n}\n\nexport default class Agent {\n    constructor() {\n        // this.idx = i; \n        // // Construct all important variables. \n        this.position = new THREE.Vector3(Math.random() * 20, 2, 0); \n        this.velocity = new THREE.Vector3(0.1, 0.1, 0.1); \n        this.acceleration = new THREE.Vector3(0, 0, 0); \n        this.rotationA = new THREE.Quaternion(); \n        this.rotationB = new THREE.Quaternion(); \n        this.fSteer = new THREE.Vector3(0, 0, 0);\n        this.vDesired = new THREE.Vector3(0, 0, 0); \n        \n        // Helper vectors. \n        this.sumVec = new THREE.Vector3(0, 0, 0);\n        this.diffVec = new THREE.Vector3(0, 0, 0); \n\n        // Force and speeds. \n        this.maxSpeed = this.getRandomArbitrary(0.015, 0.050); \n        this.maxSlowDownSpeed = 0; \n\n        // Tolerances\n        this.slowDownTolerance = 0.2 * 0.2; \n        this.arriveTolerance = 0.01 * 0.01; \n\n        // Target value that changes based on the pattern position. \n        this.target = new THREE.Vector3(0, 0, 0); \n    }\n\n    updateAgent(nAgents) {\n        this.seekTarget(); \n        this.flock(nAgents); \n        this.updatePosition();\n    }\n\n    seekTarget() {\n        this.seek(); // Calculate the force required to seek the target position. \n        this.applyForce(); // Apply the force. \n    }\n\n    flock(nAgents) {\n        if (nAgents.length > 0) {\n            this.seperation(nAgents); \n            this.applyForce(); \n\n            this.cohesion(nAgents);\n            this.applyForce();\n\n            this.align(nAgents);\n            this.applyForce();\n        }\n    }\n\n    updatePosition() {\n        // Target velocity. \n        this.sumVec.addVectors(this.velocity, this.acceleration); \n        \n        // What's my intermediate velocity? \n        // Lerp the velocity rather than just updating straight up.\n        this.velocity = this.velocity.lerp(this.sumVec, AgentParams.SmoothFactor); \n        this.velocity.clampLength(-9999, this.maxSpeed); \n\n        this.position.add(this.velocity); \n        this.acceleration.multiplyScalar(0); \n    }\n\n    applyForce() {\n        // Add steering force to acceleration to change the position of the agent. \n        this.acceleration.add(this.fSteer); \n    }\n\n    seek() {\n        // Calculate desired velocity. \n        this.vDesired.subVectors(this.target, this.position); \n        this.vDesired.normalize();\n\n        let d = this.vDesired.lengthSq(); \n        if (d < this.slowDownTolerance && d > this.arriveTolerance) {\n            let newMaxSpeed = Utility.map_range(d, this.slowDownTolerance, this.arriveTolerance, this.maxSpeed, this.maxSlowDownSpeed); \n            this.vDesired.multiplyScalar(newMaxSpeed); \n        } else {\n            this.vDesired.multiplyScalar(this.maxSpeed); \n        }\n\n        // Calculate steering force.\n        this.fSteer.subVectors(this.vDesired, this.velocity); \n        this.fSteer.clampLength(-99999, AgentParams.MaxForce); \n    }\n\n    seperation(nAgents) {\n        this.fSteer.set(0, 0, 0); \n        this.sumVec.set(0, 0, 0); \n\n        if (nAgents.length > 0) {\n            nAgents.forEach(n => {\n                this.diffVec.subVectors(this.position, n.position); \n                this.diffVec.normalize(); \n                this.diffVec.divideScalar(this.diffVec.length());  // Weight the vector properly based on the distance from the target. \n                this.sumVec.add(this.diffVec); \n            });\n            \n            // Calculate desired force using the average desired velocity \n            this.sumVec.divideScalar(nAgents.length); \n            if (this.sumVec.lengthSq() > 0) {\n                this.sumVec.normalize(); \n                this.sumVec.clampLength(-99999, this.maxSpeed);\n                this.fSteer.subVectors(this.sumVec, this.velocity);\n                this.fSteer.clampLength(-99999, AgentParams.MaxForce); \n                this.fSteer.multiplyScalar(AgentParams.SeperationForce); // Apply seperation weight. \n            }\n        }\n    }\n\n    cohesion(nAgents) {\n        this.target.set(0, 0, 0); \n        this.fSteer.set(0, 0, 0); \n\n        if (nAgents.length > 0) {\n            nAgents.forEach(n => {\n                this.target.add(n.position); \n            }); \n\n            this.target.divideScalar(nAgents.length); \n            this.seek(); // Seek the new target\n            this.fSteer.multiplyScalar(AgentParams.CohesionForce); \n        }\n    }\n\n    align(nAgents) {\n        this.fSteer.set(0, 0, 0); \n\n        if (nAgents.length > 0) {\n            nAgents.forEach(a => {\n                this.fSteer.add(a.velocity); \n            }); \n        \n            this.fSteer.divideScalar(nAgents.length); \n            this.fSteer.normalize(); \n            this.fSteer.multiplyScalar(this.maxSpeed); \n            this.fSteer.sub(this.velocity); \n            this.fSteer.clampLength(-99999, AgentParams.MaxForce); \n            this.fSteer.multiplyScalar(AgentParams.AlignmentForce); // Apply alignment weight. \n        }\n    }\n\n    setTarget(targetPos) {\n        this.target.copy(targetPos);\n    }\n    \n    getRandomArbitrary(min, max) {\n       return Math.random() * (max - min) + min;\n    }\n}","/*\r\n  Author: Amay Kataria\r\n  Date: 08/19/2021\r\n  Title: Pigeon.js\r\n  Description: Pigeon class that extends the agent class. It loads the bird model \r\n  and executes high level animations, etc. \r\n*/\r\n\r\nimport * as THREE from 'three'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\r\nimport Agent from '../Environment/Agent.js'\r\nimport model from '../../models/Bird_simple.glb'; \r\nimport * as Utility from '../Utilities/Utility';\r\n\r\nconst loader = new GLTFLoader(); \r\n\r\nexport default class Pigeon extends Agent {\r\n    constructor(scene) {\r\n        super();\r\n        this.loadPigeon(scene); \r\n    }\r\n\r\n    loadPigeon(scene) {\r\n        loader.load(model, gltf => {\r\n            this.pigeon = gltf.scene; \r\n            \r\n            // Agent is the parent object under which pigeon sits. \r\n            this.parent = new THREE.Group();\r\n            this.parent.add(this.pigeon); \r\n            this.parent.frustumCulled = false;\r\n            this.parent.castShadow = true;\r\n            this.parent.receiveShadow = true; \r\n\r\n            // Store all the parameters that we'll be changing for this agent. \r\n            this.agentPosition = this.parent.position; \r\n            this.agentRotation = this.parent.rotation; \r\n            this.agentScale = this.parent.scale\r\n            this.agentAnimations = gltf.animations; \r\n\r\n            this.agentScale.set(0.50, 0.50, 0.50);\r\n\r\n            // Setup animation. \r\n            this.animationMixer = new THREE.AnimationMixer(this.parent); \r\n            var action = this.animationMixer.clipAction(this.agentAnimations[0]);\r\n            action.play(); \r\n\r\n            // Add it to the scene. \r\n            scene.add(this.parent); \r\n        }, undefined, function ( error ) {\r\n            console.error(error);\r\n        }); \r\n    }\r\n\r\n    update(delta, nAgents) {\r\n        // Animation update. \r\n        if (this.animationMixer) {\r\n            this.animationMixer.update(delta);\r\n\r\n            // Behaviors. \r\n            this.updateAgent(nAgents);  \r\n\r\n            // Sync rotation and position. \r\n            this.syncPosition();\r\n            this.syncRotation(); \r\n        }\r\n    }\r\n\r\n    syncPosition() {\r\n        // Sync position of the agent with \r\n        // the actual agent scene. \r\n        this.parent.position.copy(this.position);\r\n    }\r\n\r\n    syncRotation() {\r\n        // // Agent rotation.\r\n        let azimuth, inclination; \r\n        azimuth = Utility.azimuth(this.velocity); \r\n        inclination = Utility.inclination(this.velocity);\r\n\r\n        Utility.axisRotation(0, 1, 0, azimuth, this.rotationA); // Azimuth rotate around Z-axis\r\n        Utility.axisRotation(0, 0, 1, inclination - Math.PI/2, this.rotationB); // Inclination rotate X-axis\r\n                    \r\n        this.rotationA.multiply(this.rotationB);\r\n        this.parent.setRotationFromQuaternion(this.rotationA);\r\n    }\r\n}\r\n\r\n\r\n","import * as THREE from 'three';\n\nexport default class Target {\n    constructor(scene) {\n        let geometry = new THREE.SphereGeometry(0.2, 15, 15);\n        let material = new THREE.MeshLambertMaterial({color: new THREE.Color(1, 0, 0), wireframe: false}); \n        this.mesh = new THREE.Mesh(geometry, material);\n\n        scene.add(this.mesh);\n    }\n\n    getVector() {\n        return this.mesh.position; \n    }\n\n    setVector(v) {\n        this.mesh.position.copy(v);\n    }\n\n    setVisibility(v) {\n        this.mesh.visible = v;\n    }\n}","/*\r\n  Name: PigeonManager.js\r\n  Author: Amay Kataria\r\n  Date: 09/26/2021\r\n  Description: Container class that manages all the pigeons that are created in the world. \r\n*/\r\n\r\nimport * as THREE from 'three'\r\n\r\nimport { EllipsePattern, ellipseConstructor } from './PatternManager';\r\nimport { OctreeManager } from './OctreeManager'\r\nimport Pigeon from '../Environment/Pigeon'\r\nimport Target from '../Environment/Target'\r\n\r\nconst NUM_PIGEONS = 50; \r\n\r\nexport let TargetParams = {\r\n    ShowTarget: true\r\n}\r\n\r\nclass PigeonManager {\r\n    constructor(scene) {\r\n        // Manages the octree for the pigeons. \r\n        this.octreeManager = new OctreeManager();\r\n        \r\n        // Container of all the pigeons. \r\n        this.pigeons = [];\r\n        \r\n        // Clock, required for animation of the agents. \r\n        this.clock = new THREE.Clock(); \r\n\r\n        this.setupTargetPattern(); \r\n    }\r\n\r\n    setup(scene) {\r\n        // Instantiate all the pigeons. \r\n        for (let i = 0; i < NUM_PIGEONS; i++) {\r\n            let p = new Pigeon(scene); \r\n            this.pigeons.push(p);\r\n        }\r\n\r\n        // Create the target object that the pigeons are following. \r\n        this.target = new Target(scene);\r\n    }\r\n\r\n    setupTargetPattern() {\r\n        let pos = new THREE.Vector3(0, 6, 0); // Target position\r\n        let radX = 10; \r\n        let radZ = 10;\r\n        let amp = 0; \r\n        let dir = true; \r\n        let moveFactor = THREE.Math.degToRad(0.3); \r\n        let patternObj = ellipseConstructor(pos, radX, radZ, amp, dir, moveFactor); \r\n        this.ellipsePattern = new EllipsePattern(patternObj); \r\n    }\r\n\r\n    update() {\r\n        // Do any pigeons exist? \r\n        if (this.pigeons.length > 0) {\r\n            // Target pattern's current position. \r\n            this.ellipsePattern.update();\r\n            let patternPos = this.ellipsePattern.getTargetPos();\r\n\r\n            // Delta change in time to advance the animation. \r\n            let delta = this.clock.getDelta(); \r\n\r\n            // Update octree. Note: On every update, we instantiate a new octree\r\n            // and populate it with the new pigeon position. So everytime, \r\n            // the neighbors get updated. \r\n            this.octreeManager.update(patternPos, this.pigeons); \r\n\r\n            let nAgents = []; // Neighboring agents. \r\n            this.pigeons.forEach(p => {\r\n                // Update the target's position \r\n                p.setTarget(patternPos); \r\n                // Find and update the location of neighboring agents\r\n                nAgents = this.octreeManager.getNeighbours(p.position); \r\n                p.update(delta, nAgents);\r\n            });\r\n\r\n            // Target object properties. \r\n            this.target.setVector(patternPos);\r\n            this.target.setVisibility(TargetParams.ShowTarget);\r\n        }\r\n    }\r\n} \r\n\r\nexport default PigeonManager;","/*\r\n  Name: Websocket.js\r\n  Author: Amay Kataria\r\n  Date: 09/24/2021\r\n  Description: Class responsible for communication with the webserver. We use websockets\r\n  technology for this. Here we have the websocket client, which communicates with backend\r\n  server over websockets.\r\n*/\r\n\r\nimport io  from 'socket.io-client'\r\n\r\n//const localhostURL = \"http://localhost:5000\";\r\nconst herokuURL = \"https://befantastic-martha.herokuapp.com\";\r\n\r\nclass Websocket {\r\n  constructor() {\r\n      this.siteURL = herokuURL + '/app'; \r\n\r\n      this.socket = io(this.siteURL, {\r\n          reconnection: true,\r\n          reconnectionDelay: 500,\r\n          reconnectionAttempts: Infinity\r\n      });\r\n\r\n      this.socket.once('connect', this.subscribe.bind(this));\r\n      this.handlePresetsCbk = ''; \r\n  }\r\n\r\n  subscribe() {\r\n      console.log('Connected');\r\n\r\n      // Subscribe to incoming events from the webserver here. \r\n      this.socket.on('time', this.logTime.bind(this));\r\n      this.socket.on('receivePresets', this.handlePresets.bind(this));\r\n  }\r\n\r\n  handlePresets(data) {\r\n    this.handlePresetsCbk(data); \r\n  }\r\n\r\n  // ----------------------- DATABASE CALLS --------------------- //\r\n  saveGuiPreset(presetName, json) {\r\n      let payload = {\r\n          'name':  presetName, \r\n          'data': json\r\n      }\r\n      this.socket.emit('savePreset', payload); \r\n  }\r\n\r\n  readAllPresets(readPresetsCallback) {\r\n    this.socket.emit('getPresets'); \r\n    this.handlePresetsCbk = readPresetsCallback; // Subscribe to receive data when the call completes. \r\n  }\r\n\r\n  deletePreset(presetName) {\r\n    this.socket.emit('deletePreset', presetName);\r\n  }\r\n\r\n  // -------------------- DON'T CHANGE THESE -------------------    \r\n  disconnect() {\r\n      console.log('Socket Server Disconnected.');\r\n  }\r\n\r\n  logTime(data) {\r\n      //console.log('Socket Connection Alive: ' + data);\r\n  }\r\n}\r\n\r\nexport default new Websocket();\r\n\r\n\r\n","/*\r\n  Name: ServerGui.js\r\n  Author: Amay Kataria\r\n  Date: 09/24/2021\r\n  Description: A tweakpane GUI implementation that stores and loads presets from a backend server. \r\n  The data is transmitted across using a Websocket connection that is maintained throughout the\r\n  lifetime of the application. \r\n*/\r\n\r\nimport { Pane } from 'tweakpane';\r\nimport * as EssentialsPlugin from '@tweakpane/plugin-essentials';\r\nimport _ from 'lodash';\r\n\r\nimport Websocket from './Websocket';\r\n\r\nimport { TargetParams } from '../Managers/PigeonManager';\r\n// import { EllipseParams } from './PatternManager.js';\r\nimport { AgentParams } from '../Environment/Agent.js';\r\nimport { OrbitParams } from '../Managers/CameraControl.js'\r\n\r\n// Local params for the GUI. \r\n// Presets is a dynamically populated prop (critical)\r\nlet GuiParams = {\r\n    Preset: 'Global',\r\n    Presets: ''\r\n}\r\nconst PRESETS_IDX = 1; \r\n\r\nclass ServerGui {\r\n    constructor(containerComponent) {\r\n        this.gui = new Pane({title: 'Pigeon GUI', container: containerComponent, expanded: false});\r\n        this.gui.registerPlugin(EssentialsPlugin);\r\n\r\n        // Preset name\r\n        this.gui.addInput(GuiParams, 'Preset');\r\n        \r\n        // Presets.\r\n        this.presetOptions = []; // Backup object of all the preset options. // Saves the truth. \r\n        this.buildPresets(); \r\n\r\n        // FPS\r\n        this.fpsGraph = this.gui.addBlade({\r\n            view: 'fpsgraph',\r\n            label: 'FPS',\r\n            lineCount: 2,\r\n        });\r\n\r\n        // Orbit controls. \r\n        let f0 = this.gui.addFolder({ title: 'Orbit Controls', expanded: true });\r\n        f0.addInput(OrbitParams, 'EnableControls', {label: 'Enable Controls'});\r\n        f0.addInput(OrbitParams, 'EnablePan', {label: 'Enable Panning'});\r\n        f0.addInput(OrbitParams, 'AutoRotate', {label: 'Enable AutoRotate'});\r\n        f0.addInput(OrbitParams, 'RotateSpeed', { label: 'Rotation Speed', min: 0.1, max: 1.0 });\r\n        f0.addInput(OrbitParams, 'EnableKeys', {label: 'Enable Keys'});\r\n\r\n        // World Parameters\r\n        let f1 = this.gui.addFolder({ title: 'Target Params', expanded: true });\r\n        f1.addInput(TargetParams, 'ShowTarget', {label: 'Show Target'});\r\n\r\n        let f2 = this.gui.addFolder({ title: 'Agent Params', expanded: true});\r\n        f2.addInput(AgentParams, 'MaxForce', {label: 'Max Force', min: 0.005, max: 2, step: 0.005});\r\n        f2.addInput(AgentParams, 'SmoothFactor', {label: 'Smooth Factor', min: 0.005, max: 0.1, step: 0.005});\r\n        f2.addInput(AgentParams, 'SeperationForce', {label: 'Seperation Force', min: 0.5, max: 2, step: 0.1}); \r\n        f2.addInput(AgentParams, 'CohesionForce', {label: 'Cohesion Force', min: 0.1, max: 2, step: 0.1});\r\n        f2.addInput(AgentParams, 'AlignmentForce', {label: 'Alignment Force', min: 0, max: 2, step: 0.1}); \r\n\r\n        // Save Preset button\r\n        this.gui.addButton({title: 'Save Preset'}).on('click', this.onSavePreset.bind(this));       \r\n        this.gui.addButton({title: 'Delete Preset'}).on('click', this.onDeletePreset.bind(this));\r\n        this.gui.addButton({title: 'Show Panel'}).on('click', this.onShowPanel.bind(this)); \r\n\r\n        // Read presets from the database. \r\n        Websocket.readAllPresets(this.onReceivePresets.bind(this)); \r\n    }\r\n\r\n    onPresetSelected(event) {\r\n        // The value of the select preset is the JSON value. \r\n        let guiJson = JSON.parse(event.value); \r\n        this.gui.importPreset(guiJson);\r\n    }\r\n\r\n    onReceivePresets(data) {\r\n        console.log('All the presets received:');\r\n        console.log(data);\r\n\r\n        // If there are valid presets. \r\n        if (data.length > 0) {\r\n            // Build preset options. \r\n            data.forEach(d => {\r\n                let name = d['name'];\r\n                let config = d['config'];\r\n                // We push here rather than unshift because it's okay to just read this is in the order\r\n                // the entries were pushed in the database. \r\n                this.presetOptions.push({ text: name, value: JSON.stringify(config)});\r\n            }); \r\n\r\n            // Get the first preset and set the GUI with that. \r\n            let defaultPresetJSON = data[0]['config'];\r\n            this.gui.importPreset(defaultPresetJSON);\r\n\r\n            // Rebuild the preset controller using this.presetOptions. \r\n            this.disposePresets();\r\n            this.buildPresets();\r\n        }\r\n    }\r\n\r\n    onSavePreset() {\r\n        let presetName = GuiParams.Preset; \r\n        if (presetName.length > 0) {\r\n            // Clear the presets first. \r\n            this.disposePresets(); \r\n            let json = this.gui.exportPreset(); \r\n\r\n            // Does this preset exist? \r\n            let preset = _.find(this.presetOptions, p => {\r\n                return p.text === presetName;\r\n            });\r\n\r\n            if (preset) {\r\n                // Update local json of the preset.\r\n                console.log('Preset Exists. Updating database and local copy of the preset.');\r\n                preset.value = JSON.stringify(json);\r\n                // NOTE: Update the preset options array to maintain the order of the updated presets. \r\n                // Unfortunately, we need to rebuild the presets everytime and we want to make sure \r\n                // the order of presets doesn't change. \r\n                this.presetOptions = _.sortBy(this.presetOptions, ({text}) => { \r\n                    return text === presetName ? 0: 1;\r\n                });\r\n            } else {\r\n                console.log('Preset doesnt exist. New entry in the database.');\r\n                this.presetOptions.unshift({ text: presetName, value: JSON.stringify(json)} );\r\n            }\r\n\r\n            // Update database. \r\n            Websocket.saveGuiPreset(presetName, json); \r\n\r\n            // Rebuild the presets. \r\n            this.buildPresets(); \r\n        } else {\r\n            alert('Not an empty entry please.');\r\n        }\r\n    }\r\n\r\n    onDeletePreset() {\r\n        if (this.presetOptions.length > 0) {\r\n            let presetName = GuiParams.Preset; \r\n            console.log('Deleting preset: ' + presetName);\r\n\r\n            // Remove that element from the array. \r\n            // Updates the original array. \r\n            _.remove(this.presetOptions, p => p.text === presetName); \r\n\r\n            // Delete the preset from the database. \r\n            Websocket.deletePreset(presetName); \r\n\r\n            // Rebuild the preset list. \r\n            this.disposePresets(); \r\n            this.buildPresets();\r\n\r\n            // Maybe I'm the last entry in the database. \r\n            if (this.presetOptions.length > 0) {\r\n                // Get preset options for the first preset options entry. \r\n                let presetJson = this.presetOptions[0].value; \r\n                this.gui.importPreset(JSON.parse(presetJson));\r\n            }\r\n        }\r\n    }\r\n\r\n    disposePresets() {\r\n        GuiParams.Presets = '';\r\n        this.presetList.dispose();\r\n    }\r\n\r\n    buildPresets() {\r\n        this.presetList = this.gui.addInput(GuiParams, 'Presets', {\r\n            index: PRESETS_IDX,\r\n            options: this.presetOptions\r\n        }); \r\n        this.presetList.on('change', this.onPresetSelected.bind(this));\r\n    }\r\n\r\n    subscribeShowPanel(callback) {\r\n        this.onShowPanel = callback; \r\n    }\r\n\r\n    onShowPanel() {\r\n        this.onShowPanel(); \r\n    }   \r\n} \r\n\r\n// Keep a singleton instance of this - through App.js\r\nexport default ServerGui;\r\n\r\n//     // // Ellipse parameters\r\n//     // let ellipseFolder = this.gui.addFolder('Ellipse Params'); \r\n//     // ellipseFolder.add(ellipseParams, 'originPosX').name('OriginX')\r\n//     // .min(-20).max(20).step(0.1);\r\n//     // ellipseFolder.add(ellipseParams, 'originPosY').name('OriginY')\r\n//     // .min(0).max(50).step(0.1);\r\n//     // ellipseFolder.add(ellipseParams, 'originPosZ').name('OriginZ')\r\n//     // .min(-50).max(50).step(0.1);\r\n//     // ellipseFolder.add(ellipseParams, 'radiusX').name('RadX')\r\n//     // .min(0).max(20).step(0.5);\r\n//     // ellipseFolder.add(ellipseParams, 'radiusZ').name('RadZ')\r\n//     // .min(0).max(20).step(0.5);\r\n//     // ellipseFolder.add(ellipseParams, 'amplitude').name('Amplitude')\r\n//     // .min(0).max(10).step(0.5);\r\n//     // ellipseFolder.add(ellipseParams, 'speed').name('Speed')\r\n//     // .min(0.1).max(1.0).step(0.1);\r\n//     // ellipseFolder.add(ellipseParams, 'isClockwise').name('Is Clockwise');\r\n\r\n//     // How to save the parameters in a preset, so next time we pull those params.\r\n//   }\r\n","/*\r\n  Name: GuiPanel.js\r\n  Author: Amay Kataria\r\n  Date: 09/26/2021\r\n  Description: This is the container component where the GUI is placed in the project. It needs to be outside \r\n  the way of the title. We just move it slightly lower from the top. \r\n*/\r\n\r\nimport React from 'react'\r\nimport Radium from 'radium'\r\nimport ServerGui from '../Utilities/ServerGui';\r\n\r\nconst styles = {\r\n    container: {\r\n        position: 'absolute',\r\n        top: '150px',\r\n        right: '20px'\r\n    }\r\n};\r\n\r\nclass GuiPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n    };\r\n\r\n    this.guiRef = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div ref={this.guiRef} style={styles.container}></div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    let containerComponent = this.guiRef.current; \r\n    this.gui = new ServerGui(containerComponent); \r\n    this.gui.subscribeShowPanel(this.onShowPanel.bind(this));\r\n  }\r\n\r\n  getFpsGraph() {\r\n      return this.gui.fpsGraph; \r\n  }\r\n\r\n  onShowPanel() {\r\n    this.props.onShowInfoPanel(); \r\n  }\r\n}\r\n\r\nexport default Radium(GuiPanel);","const color = {\n    white: '#ffffff',\n    darkWithAlpha: 'rgb(0, 0, 0, 0.4)',\n    button: 'rgb(255, 255, 255, 0.4)',\n    link: '#D34C00',\n    panel: '#E7EFE0'\n};\n\nconst fontSize = {\n    extraSmall: '8px',\n    verySmall: '12px',\n    lessSmall: '14px',\n    small: '16px',\n    lessBig: '18px',\n    big: '20px',\n    veryBig: '24px',\n    extraBig: '28px',\n    huge: '32px',\n    veryHuge: '36px',\n    extraHuge: '40px',\n    massive: '44px',\n    veryMassive: '48px',\n    extraMassive: '52px',\n    enormous: '56px',\n    veryEnormous: '60px',\n    extraEnormous: '64px',\n    insane: '68px',\n    veryInsane: '72px',\n    extraInsane: '76px',\n    gaia: '80px',\n    veryGaia: '84px',\n    extraGaia: '88px'\n};\n\nconst padding = {\n    // Increments of 4\n    extraSmall: '4px',\n    verySmall: '8px',\n    small: '12px',\n    // Incremenets of 8\n    big : '20px',\n    veryBig : '28px',\n    extraBig : '36px',\n    // Increments of 12\n    huge: '52px',\n    veryHuge: '64px',\n    extraHuge: '76px',\n    // Incremenets of 16\n    massive: '92px',\n    veryMassive: '108px',\n    extraMassive: '124px',\n    // Increment of 20\n    enourmous: '100px',\n    veryEnormous: '120px',\n    extraEnormous: '140px',\n    // Increment of 40\n    insane: '160px',\n    veryInsane: '200px',\n    extraInsane: '240px'\n\n};\n\nconst fontFamily = {\n    din: 'd-dinregular',\n    opensanslight: 'open_sanslight',\n    opensansregular: 'open_sansregular',\n    demode: 'demoderegular',\n    slice: 'sliceregular',\n    warsaw: 'warsaw_gothic'\n};\n\n\nexport { color, fontSize, fontFamily, padding };","/*\r\n  Name: EnterPanel.js\r\n  Author: Amay Kataria\r\n  Date: 09/26/2021\r\n  Description: This is the first panel that the user sees. It's the overlay panel when the user comes to the website. \r\n  It has a transparent finish so one can see the terrain underneath it. It shows the title of the project and the \r\n  Enter button to enter the website. \r\n*/\r\n\r\nimport React from 'react'\r\nimport Radium from 'radium'\r\n\r\nimport { fontFamily, color, fontSize, padding } from '../Utilities/CommonStyles.js'\r\n\r\nconst styles = {\r\n    container: {\r\n        position: 'absolute',\r\n        top: '0%',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        backgroundColor: color.darkWithAlpha,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        zIndex: 0\r\n    },\r\n\r\n    hide: {\r\n        visibility: 'hidden'\r\n    },\r\n\r\n    title: {\r\n        fontFamily: fontFamily.warsaw,\r\n        fontSize: fontSize.extraMassive,\r\n        letterSpacing: 5,\r\n        opacity: 1,\r\n        color: color.white,\r\n    },\r\n\r\n    loading: {\r\n        fontFamily: fontFamily.din,\r\n        fontSize: fontSize.veryBig, \r\n        color: color.white\r\n    },\r\n\r\n    button: {\r\n        fontFamily: fontFamily.din,\r\n        color: color.white,\r\n        fontSize: fontSize.veryBig,\r\n        borderStyle: 'solid',\r\n        borderWidth: '2px',\r\n        padding: padding.verySmall,\r\n        paddingLeft: padding.veryBig,\r\n        paddingRight: padding.veryBig,\r\n        cursor: 'default'\r\n    }\r\n};\r\n\r\nconst Load_Time = 3000; // 2 seconds for now. \r\n\r\nclass EnterPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n        isHidden: false,\r\n        isLoading: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let containerStyle = this.state.isHidden ? [styles.container, styles.hide] : styles.container;\r\n    let content = this.state.isLoading ? this.getLoader() : this.getTitle(); \r\n    return (\r\n      <div style={containerStyle}>\r\n          {content}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getLoader() {\r\n    return (<div style={styles.loading}>Loading ...</div>); \r\n  }\r\n\r\n  getTitle() {\r\n    return (\r\n        <React.Fragment>\r\n            <div style={styles.title}>MARTHA.I</div>\r\n            <div onClick={this.onEnter.bind(this)} style={styles.button}>ENTER</div>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n\r\n  onEnter() {\r\n    this.setState({\r\n        isLoading: true\r\n    });\r\n\r\n    // Tell the world that the user has\r\n    // clicked on enter. \r\n    this.props.onEnterWorld(); \r\n\r\n    \r\n    // Schedule a cleanup here. \r\n    setTimeout(this.hasFinishedLoading.bind(this), Load_Time); \r\n  }\r\n\r\n  hasFinishedLoading() {\r\n    this.setState({\r\n        isHidden: true\r\n    }); \r\n\r\n    // Tel the world that load is complete. \r\n    this.props.onLoadComplete(); \r\n  }\r\n}\r\n\r\nexport default Radium(EnterPanel);","/*\r\n  Name: Title.js\r\n  Author: Amay Kataria\r\n  Date: 09/26/2021\r\n  Description: This components holds the title of the project and the about button\r\n*/\r\n\r\nimport React from 'react'\r\nimport Radium from 'radium'\r\n\r\nimport { fontFamily, color, fontSize, padding } from '../Utilities/CommonStyles.js'\r\n\r\nconst animation = {\r\n    floatIn: Radium.keyframes({\r\n      '0%': {\r\n        top: '-100px'\r\n      },\r\n      '50%': {\r\n        top: '-50px',\r\n      },\r\n      '100%': {\r\n        top: '0px',\r\n      }\r\n    }),\r\n  \r\n    floatOut: Radium.keyframes({\r\n      '0%': {\r\n        top: '0'\r\n      },\r\n      '50%': {\r\n        top: '-50px',\r\n      },\r\n      '100%': {\r\n        top: '-100px'\r\n      }\r\n    })\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        top: '-100px'\r\n    },\r\n\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        padding: padding.extraBig,\r\n        alignSelf: 'center',\r\n    },\r\n\r\n    animateIn: {\r\n        animation: 'x 2s linear 1 forwards',\r\n        animationName: animation.floatIn\r\n    },\r\n\r\n    animateOut: {\r\n        animation: 'x 2s linear 1 forwards',\r\n        animationName: animation.floatOut\r\n    },\r\n\r\n    title: {\r\n        fontFamily: fontFamily.warsaw,\r\n        fontSize: fontSize.massive,\r\n        letterSpacing: 5,\r\n        opacity: 1,\r\n        color: color.white,\r\n        cursor: 'default'\r\n    },\r\n\r\n    about: {\r\n        fontFamily: fontFamily.din,\r\n        color: color.white,\r\n        fontSize: fontSize.massive,\r\n        cursor: 'default'\r\n    }\r\n};\r\n\r\nlet ANIMATION_STATE = {\r\n    NONE: 0,\r\n    SHOW: 1, \r\n    HIDE: 2\r\n};\r\n\r\nclass Title extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={ \r\n        aniState: ANIMATION_STATE.NONE\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let containerStyle = this.state.aniState === ANIMATION_STATE.SHOW ? [styles.container, styles.animateIn] : \r\n        this.state.aniState === ANIMATION_STATE.HIDE ? [styles.container, styles.animateOut] : styles.container;\r\n    return (\r\n      <div style={containerStyle} >\r\n          <div style={styles.content}>\r\n            <div style={styles.title}>MARTHA.I</div>\r\n            <div style={styles.title}>ABOUT</div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  updateTitle() {\r\n    if (this.state.aniState === ANIMATION_STATE.NONE) {\r\n        this.setState({\r\n            aniState: ANIMATION_STATE.SHOW\r\n        });\r\n    } else if (this.state.aniState === ANIMATION_STATE.SHOW) {\r\n        this.setState({\r\n            aniState: ANIMATION_STATE.HIDE\r\n        });\r\n    } else if (this.state.aniState === ANIMATION_STATE.HIDE) {\r\n        this.setState({\r\n            aniState: ANIMATION_STATE.SHOW\r\n        }); \r\n    }\r\n  }\r\n}\r\n\r\nexport default Radium(Title);","/*\r\n  Name: InfoPanel.js\r\n  Author: Amay Kataria\r\n  Date: 09/26/2021\r\n  Description: This is the side panel that gets pulled out when something is raycasted or selected in the world. \r\n*/\r\n\r\nimport React from 'react'\r\nimport Radium from 'radium'\r\n\r\nimport { fontFamily, color, fontSize, padding } from '../Utilities/CommonStyles.js'\r\n\r\nconst animation = {\r\n    slideIn: Radium.keyframes({\r\n      '0%': {\r\n        left: '-500px'\r\n      },\r\n      '50%': {\r\n        left: '-250px',\r\n      },\r\n      '100%': {\r\n        left: '0px',\r\n      }\r\n    }),\r\n  \r\n    slideOut: Radium.keyframes({\r\n      '0%': {\r\n        left: '0px'\r\n      },\r\n      '50%': {\r\n        left: '-250px',\r\n      },\r\n      '100%': {\r\n        left: '-500px'\r\n      }\r\n    })\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        position: 'absolute',\r\n        top: '0%',\r\n        width: '500px',\r\n        height: '100%',\r\n        left: '-500px',\r\n        backgroundColor: color.panel\r\n    },\r\n\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        padding: padding.extraBig,\r\n        alignSelf: 'center'\r\n    },\r\n\r\n    animateIn: {\r\n        animation: 'x 2s linear 1 forwards',\r\n        animationName: animation.slideIn\r\n    },\r\n\r\n    animateOut: {\r\n        animation: 'x 2s linear 1 forwards',\r\n        animationName: animation.slideOut\r\n    },\r\n\r\n    title: {\r\n        fontFamily: fontFamily.warsaw,\r\n        fontSize: fontSize.massive,\r\n        letterSpacing: 5,\r\n        opacity: 1,\r\n        color: color.white,\r\n        cursor: 'default'\r\n    },\r\n\r\n    about: {\r\n        fontFamily: fontFamily.din,\r\n        color: color.white,\r\n        fontSize: fontSize.massive,\r\n        cursor: 'default'\r\n    }\r\n};\r\n\r\nlet ANIMATION_STATE = {\r\n    NONE: 0,\r\n    SHOW: 1,\r\n    HIDE: 2\r\n}\r\n\r\nclass InfoPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n        aniState: ANIMATION_STATE.NONE\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let containerStyle = this.state.aniState === ANIMATION_STATE.SHOW ? [styles.container, styles.animateIn] : \r\n        this.state.aniState === ANIMATION_STATE.HIDE ? [styles.container, styles.animateOut] : styles.container;\r\n\r\n    return (\r\n      <div style={containerStyle} >\r\n          <div style={styles.content}>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  updatePanel() {\r\n      if (this.state.aniState === ANIMATION_STATE.NONE) {\r\n          this.setState({\r\n              aniState: ANIMATION_STATE.SHOW\r\n          });\r\n      } else if (this.state.aniState === ANIMATION_STATE.SHOW) {\r\n          this.setState({\r\n              aniState: ANIMATION_STATE.HIDE\r\n          });\r\n      } else if (this.state.aniState === ANIMATION_STATE.HIDE) {\r\n          this.setState({\r\n              aniState: ANIMATION_STATE.SHOW\r\n          }); \r\n      }\r\n  }\r\n}\r\n\r\nexport default Radium(InfoPanel);","/*\n  Name: World.js\n  Author: Amay Kataria\n  Date: 08/19/2021\n  Description: This is where Three.js world is initialized. It's the entry point for the three-dimensional \n  world and creating all elements. \n*/\n\nimport React from 'react'\nimport Radium from 'radium'\nimport * as THREE from 'three'\n\n// Utility components\nimport Terrain from '../Environment/Terrain.js'\nimport CameraControl from '../Managers/CameraControl.js'\nimport LightingManager from '../Managers/LightingManager.js'\nimport RendererManager from '../Managers/RendererManager.js'\nimport PigeonManager from '../Managers/PigeonManager.js'\n\n// Interface components. \nimport GuiPanel from './GuiPanel.js'\nimport EnterPanel from './EnterPanel.js'\nimport Title from './Title.js'\nimport InfoPanel from './InfoPanel.js'\n\nconst styles = {\n  container: {\n    width: '100vw', \n    height: '100vh',\n    overflow: 'hidden'\n  }\n};\n\nclass World extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={};\n\n    // Refs that need to be accessed. \n    this.worldRef = React.createRef(); \n    this.guiRef = React.createRef(); \n    this.titleRef = React.createRef(); \n    this.panelRef = React.createRef(); \n    \n    // 3D scene object where everything is added. \n    this.scene = new THREE.Scene(); \n\n    // Camera & Interactive controls module. \n    this.cameraControl = new CameraControl(); \n\n    // Lights.\n    this.lightingManager = new LightingManager(this.scene); \n\n    // Pigeons\n    this.pigeonManager = new PigeonManager(); \n\n    // Three.js Renderer\n    this.rendererManager = new RendererManager(); \n  }\n\n  componentDidMount() {\n    // Mount the canvas at the current div. \n    let rendererDomElement = this.rendererManager.getDomElement(); \n    this.worldRef.current.appendChild(rendererDomElement); \n\n    // Get the handle to the FPS graph component. \n    this.fpsGraph = this.guiRef.current.getFpsGraph(); \n\n    // Instantiate terrain geometry.\n    this.terrain = new Terrain(this.scene); \n\n    // Initialize the recursive rendering call. \n    this.initializeRender(); \n  }\n\n  // Component render. \n  render() {\n    return (\n      <div style={styles.container} ref={this.worldRef}>\n        <GuiPanel \n          ref={this.guiRef} \n          onShowInfoPanel={this.onShowInfoPanel.bind(this)}\n        />\n        <EnterPanel \n          onEnterWorld={this.onEnterWorld.bind(this)} \n          onLoadComplete={this.onLoadComplete.bind(this)}\n        />\n        <Title ref={this.titleRef} />\n        <InfoPanel ref={this.panelRef} />\n      </div>\n    );\n  }\n\n  initializeRender() {\n    // Render recursive loop. \n    this.fpsGraph.begin();\n      this.pigeonManager.update(); \n      this.cameraControl.update();\n      this.rendererManager.render(this.scene, this.cameraControl.getCamera());      \n    this.fpsGraph.end();\n\n    // Register this function as a callback to every repaint from the browser.\n    requestAnimationFrame(this.initializeRender.bind(this)); \n  }\n\n  onEnterWorld() {\n    // Instantiate pigeon geometry. \n    this.pigeonManager.setup(this.scene); \n  }\n\n  onLoadComplete() {\n    // Kick off a camera animation to go somewhere \n    // into the agent. \n    // Animate the Title in. \n    this.titleRef.current.updateTitle(); \n  }\n  \n  onShowInfoPanel() {\n    this.panelRef.current.updatePanel(); \n    this.titleRef.current.updateTitle(); \n  }\n}\n\nexport default Radium(World);\n\n\n// const Raycaster = new THREE.Raycaster();\n// const mouse = new THREE.Vector2(); \n\n// onMouseMove(event) {\n//   //mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n//   //mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n//   // console.log(mouse.x + ', ' + mouse.y);\n// }\n\n// onClick(event) {\n//   // mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n//   // mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\n//   // Raycaster.setFromCamera(mouse, this.camera);\n\n//   // // calculate objects intersecting the picking ray\n//   // const intersects = Raycaster.intersectObject(this.terrain.getMesh(), true);\n//   // for (let i = 0; i < intersects.length; i ++) {\n//   //   //intersects[ i ].object.material.color.set( 0xff0000 );\n//   // }\n//   // console.log('Mouse Clicked');\n\n//   let a = this.gui.getSaveObject();\n//   console.log(a);\n// }\n// window.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n// //window.addEventListener('click', this.onClick.bind(this), true)","/*\n  Name: App.js\n  Author: Amay Kataria\n  Date: 08/19/2021\n  Description: Entry point for the application.\n*/\n\nimport React from 'react'\nimport Radium from 'radium'\nimport World from './Interface/World.js'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n    };\n\n    this.worldRef = React.createRef(); \n  }\n\n  render() {\n    return (\n      <div>\n        <World ref={this.worldRef} />\n      </div>\n    );\n  }\n}\n\nexport default Radium(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './font/stylesheet.css';\nimport App from './components/App';\nimport {StyleRoot} from 'radium'\n\n// Use StyleRoot to enable keyframes and media queries for Javascript type\n// styles with Radium in components. \n// Single render function for the entire application. \nReactDOM.render(<StyleRoot><App /></StyleRoot>, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/world.9a0ad0bd.glb\";","module.exports = __webpack_public_path__ + \"static/media/Bird_simple.d1d4aa0b.glb\";"],"sourceRoot":""}